
OutSensor_t_p_h.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000882  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00000882  00000916  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800076  00800076  0000092c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000092c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000988  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  000009c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000977  00000000  00000000  00000a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000657  00000000  00000000  000013a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000452  00000000  00000000  000019fa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00001e4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000533  00000000  00000000  00001f90  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003f8  00000000  00000000  000024c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000028bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	a2 c0       	rjmp	.+324    	; 0x15c <__vector_11>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	57 c0       	rjmp	.+174    	; 0xca <__vector_13>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e2 e8       	ldi	r30, 0x82	; 130
  3a:	f8 e0       	ldi	r31, 0x08	; 8
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a6 37       	cpi	r26, 0x76	; 118
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a6 e7       	ldi	r26, 0x76	; 118
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a0 38       	cpi	r26, 0x80	; 128
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	19 d1       	rcall	.+562    	; 0x28c <main>
  5a:	11 c4       	rjmp	.+2082   	; 0x87e <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Z10LEDLAMP_ONj>:
bool ex_rx_data_complite = false;

// LED ON
void LEDLAMP_ON(unsigned int n_pin)
{
	PORTC |= ( 1 << n_pin );
  5e:	95 b3       	in	r25, 0x15	; 21
  60:	21 e0       	ldi	r18, 0x01	; 1
  62:	30 e0       	ldi	r19, 0x00	; 0
  64:	02 c0       	rjmp	.+4      	; 0x6a <_Z10LEDLAMP_ONj+0xc>
  66:	22 0f       	add	r18, r18
  68:	33 1f       	adc	r19, r19
  6a:	8a 95       	dec	r24
  6c:	e2 f7       	brpl	.-8      	; 0x66 <_Z10LEDLAMP_ONj+0x8>
  6e:	29 2b       	or	r18, r25
  70:	25 bb       	out	0x15, r18	; 21
  72:	08 95       	ret

00000074 <_Z11LEDLAMP_OFFj>:
}

// LED OFF
void LEDLAMP_OFF(unsigned int n_pin)
{
	PORTC &= ~( 1 << n_pin );
  74:	95 b3       	in	r25, 0x15	; 21
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	30 e0       	ldi	r19, 0x00	; 0
  7a:	02 c0       	rjmp	.+4      	; 0x80 <_Z11LEDLAMP_OFFj+0xc>
  7c:	22 0f       	add	r18, r18
  7e:	33 1f       	adc	r19, r19
  80:	8a 95       	dec	r24
  82:	e2 f7       	brpl	.-8      	; 0x7c <_Z11LEDLAMP_OFFj+0x8>
  84:	20 95       	com	r18
  86:	29 23       	and	r18, r25
  88:	25 bb       	out	0x15, r18	; 21
  8a:	08 95       	ret

0000008c <_Z9UART_Initj>:
}

void UART_Init (unsigned int speed)
{
	// Устанавливаем скорость Baud Rate
	UBRRH = (unsigned char)( speed >> 8 );
  8c:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) speed;
  8e:	89 b9       	out	0x09, r24	; 9
	UCSRA |= (1<<U2X); // Удвоение частоты
  90:	59 9a       	sbi	0x0b, 1	; 11
	
	// Разрешение работы передатчика
	UCSRB = ( 1 << TXEN ) | ( 1 << RXEN ) | (1 << RXCIE ) | (1 << TXCIE );
  92:	88 ed       	ldi	r24, 0xD8	; 216
  94:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
  96:	8e e8       	ldi	r24, 0x8E	; 142
  98:	80 bd       	out	0x20, r24	; 32
  9a:	08 95       	ret

0000009c <_Z14UART_Send_Charc>:
}

// Send to UART
void UART_Send_Char (char data_tx)////
{
	while ( !( UCSRA & (1<<5)) ) {}
  9c:	5d 9b       	sbis	0x0b, 5	; 11
  9e:	fe cf       	rjmp	.-4      	; 0x9c <_Z14UART_Send_Charc>
	RS485_TR;
  a0:	93 9a       	sbi	0x12, 3	; 18
	UDR = data_tx;
  a2:	8c b9       	out	0x0c, r24	; 12
  a4:	08 95       	ret

000000a6 <_Z15UART_SendStringPc>:
}

// Send to UART
void UART_SendString (char data_tx[])
{
  a6:	0f 93       	push	r16
  a8:	1f 93       	push	r17
  aa:	cf 93       	push	r28
  ac:	df 93       	push	r29
  ae:	ec 01       	movw	r28, r24
  b0:	8c 01       	movw	r16, r24
  b2:	08 5f       	subi	r16, 0xF8	; 248
  b4:	1f 4f       	sbci	r17, 0xFF	; 255
	int i;
	int len = 8;
	//len = strlen( data_tx );
	for (i=0; i < len; i++) {
		UART_Send_Char(data_tx[i]);
  b6:	89 91       	ld	r24, Y+
  b8:	f1 df       	rcall	.-30     	; 0x9c <_Z14UART_Send_Charc>
void UART_SendString (char data_tx[])
{
	int i;
	int len = 8;
	//len = strlen( data_tx );
	for (i=0; i < len; i++) {
  ba:	c0 17       	cp	r28, r16
  bc:	d1 07       	cpc	r29, r17
  be:	d9 f7       	brne	.-10     	; 0xb6 <_Z15UART_SendStringPc+0x10>
		UART_Send_Char(data_tx[i]);
	}
}
  c0:	df 91       	pop	r29
  c2:	cf 91       	pop	r28
  c4:	1f 91       	pop	r17
  c6:	0f 91       	pop	r16
  c8:	08 95       	ret

000000ca <__vector_13>:

ISR(USART_TXC_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
	RS485_RS; // Установить RE DE в 0. Прием
  d4:	93 98       	cbi	0x12, 3	; 18
}
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <_Z16USART_SendPacketPccc>:

void USART_SendPacket(char rx_device_mac[4], char rx_buffer_cmd, char rx_buffer_dat /*char rx_buffer_dat[RX_DATA_SIZE]*/)
{
  e0:	0f 93       	push	r16
  e2:	1f 93       	push	r17
  e4:	cf 93       	push	r28
  e6:	df 93       	push	r29
  e8:	cd b7       	in	r28, 0x3d	; 61
  ea:	de b7       	in	r29, 0x3e	; 62
  ec:	66 97       	sbiw	r28, 0x16	; 22
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	f8 94       	cli
  f2:	de bf       	out	0x3e, r29	; 62
  f4:	0f be       	out	0x3f, r0	; 63
  f6:	cd bf       	out	0x3d, r28	; 61
  f8:	fc 01       	movw	r30, r24
												rx_device_mac[1],
												rx_device_mac[2],
												rx_device_mac[3],
												rx_buffer_cmd,
												rx_buffer_dat,
												USART_STOPPACKET);
  fa:	1f 92       	push	r1
  fc:	8b eb       	ldi	r24, 0xBB	; 187
  fe:	8f 93       	push	r24
 100:	1f 92       	push	r1
 102:	4f 93       	push	r20
 104:	1f 92       	push	r1
 106:	6f 93       	push	r22
 108:	83 81       	ldd	r24, Z+3	; 0x03
 10a:	1f 92       	push	r1
 10c:	8f 93       	push	r24
 10e:	82 81       	ldd	r24, Z+2	; 0x02
 110:	1f 92       	push	r1
 112:	8f 93       	push	r24
 114:	81 81       	ldd	r24, Z+1	; 0x01
 116:	1f 92       	push	r1
 118:	8f 93       	push	r24
 11a:	80 81       	ld	r24, Z
 11c:	1f 92       	push	r1
 11e:	8f 93       	push	r24
 120:	1f 92       	push	r1
 122:	1f 92       	push	r1
 124:	84 e6       	ldi	r24, 0x64	; 100
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	9f 93       	push	r25
 12a:	8f 93       	push	r24
 12c:	8e 01       	movw	r16, r28
 12e:	0f 5f       	subi	r16, 0xFF	; 255
 130:	1f 4f       	sbci	r17, 0xFF	; 255
 132:	1f 93       	push	r17
 134:	0f 93       	push	r16
 136:	cb d0       	rcall	.+406    	; 0x2ce <sprintf>
	UART_SendString(tmp_tx_data);
 138:	c8 01       	movw	r24, r16
 13a:	b5 df       	rcall	.-150    	; 0xa6 <_Z15UART_SendStringPc>
}
 13c:	0f b6       	in	r0, 0x3f	; 63
 13e:	f8 94       	cli
 140:	de bf       	out	0x3e, r29	; 62
 142:	0f be       	out	0x3f, r0	; 63
 144:	cd bf       	out	0x3d, r28	; 61
 146:	66 96       	adiw	r28, 0x16	; 22
 148:	0f b6       	in	r0, 0x3f	; 63
 14a:	f8 94       	cli
 14c:	de bf       	out	0x3e, r29	; 62
 14e:	0f be       	out	0x3f, r0	; 63
 150:	cd bf       	out	0x3d, r28	; 61
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	1f 91       	pop	r17
 158:	0f 91       	pop	r16
 15a:	08 95       	ret

0000015c <__vector_11>:

ISR(USART_RXC_vect)
{
 15c:	1f 92       	push	r1
 15e:	0f 92       	push	r0
 160:	0f b6       	in	r0, 0x3f	; 63
 162:	0f 92       	push	r0
 164:	11 24       	eor	r1, r1
 166:	2f 93       	push	r18
 168:	3f 93       	push	r19
 16a:	4f 93       	push	r20
 16c:	5f 93       	push	r21
 16e:	6f 93       	push	r22
 170:	7f 93       	push	r23
 172:	8f 93       	push	r24
 174:	9f 93       	push	r25
 176:	af 93       	push	r26
 178:	bf 93       	push	r27
 17a:	cf 93       	push	r28
 17c:	ef 93       	push	r30
 17e:	ff 93       	push	r31
	char status, data; /////
	//unsigned char sub_rx_index;
	status = UCSRA;
 180:	8b b1       	in	r24, 0x0b	; 11
	data = UDR;
 182:	9c b1       	in	r25, 0x0c	; 12
	//LEDLAMP_ON(0);
	if ((status & (FRAMING_ERROR /*| PARITY_ERROR */| DATA_OVERRUN))==0)
 184:	88 71       	andi	r24, 0x18	; 24
 186:	09 f0       	breq	.+2      	; 0x18a <__vector_11+0x2e>
 188:	55 c0       	rjmp	.+170    	; 0x234 <__vector_11+0xd8>
	{

		if (data == USART_STARTPACKET)
 18a:	91 11       	cpse	r25, r1
 18c:	11 c0       	rjmp	.+34     	; 0x1b0 <__vector_11+0x54>
		{
			memset(ex_rx_buffer_adr, 0, sizeof(ex_rx_buffer_adr));
 18e:	84 e0       	ldi	r24, 0x04	; 4
 190:	eb e7       	ldi	r30, 0x7B	; 123
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	df 01       	movw	r26, r30
 196:	1d 92       	st	X+, r1
 198:	8a 95       	dec	r24
 19a:	e9 f7       	brne	.-6      	; 0x196 <__vector_11+0x3a>
			ex_rx_buffer_cmd = 0;
 19c:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <ex_rx_buffer_cmd>
			//memset(ex_rx_buffer_dat, 0, sizeof(ex_rx_buffer_dat));
			ex_rx_index=0;
 1a0:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <ex_rx_index>
			ex_rx_enable = true;
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <ex_rx_enable>
			ex_rx_data_complite = false;
 1aa:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
 1ae:	10 c0       	rjmp	.+32     	; 0x1d0 <__vector_11+0x74>
			
		}
		
		if ( (data == USART_STOPPACKET) && (ex_rx_enable == 1) )
 1b0:	9b 3b       	cpi	r25, 0xBB	; 187
 1b2:	51 f4       	brne	.+20     	; 0x1c8 <__vector_11+0x6c>
 1b4:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <ex_rx_enable>
 1b8:	88 23       	and	r24, r24
 1ba:	e1 f1       	breq	.+120    	; 0x234 <__vector_11+0xd8>
		{
			ex_rx_enable = 0;
 1bc:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <ex_rx_enable>
			ex_rx_data_complite = true;
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 1c6:	36 c0       	rjmp	.+108    	; 0x234 <__vector_11+0xd8>
		}
		
		if (ex_rx_enable == 1)
 1c8:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <ex_rx_enable>
 1cc:	88 23       	and	r24, r24
 1ce:	91 f1       	breq	.+100    	; 0x234 <__vector_11+0xd8>
		{
			if ( (ex_rx_index >= 0) && (ex_rx_index <= 4) )
 1d0:	c0 91 7f 00 	lds	r28, 0x007F	; 0x80007f <ex_rx_index>
 1d4:	c5 30       	cpi	r28, 0x05	; 5
 1d6:	b0 f4       	brcc	.+44     	; 0x204 <__vector_11+0xa8>
			{
				ex_rx_buffer_adr[ex_rx_index] = data;
 1d8:	ec 2f       	mov	r30, r28
 1da:	f0 e0       	ldi	r31, 0x00	; 0
 1dc:	e5 58       	subi	r30, 0x85	; 133
 1de:	ff 4f       	sbci	r31, 0xFF	; 255
 1e0:	90 83       	st	Z, r25
				if (ex_rx_index == 4)
 1e2:	c4 30       	cpi	r28, 0x04	; 4
 1e4:	59 f4       	brne	.+22     	; 0x1fc <__vector_11+0xa0>
				{
					if ( !strcat(ex_rx_buffer_adr, DEVICE_MAC) )
 1e6:	60 e6       	ldi	r22, 0x60	; 96
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	8b e7       	ldi	r24, 0x7B	; 123
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	64 d0       	rcall	.+200    	; 0x2b8 <strcat>
 1f0:	89 2b       	or	r24, r25
 1f2:	21 f4       	brne	.+8      	; 0x1fc <__vector_11+0xa0>
					{
						ex_rx_enable = 0;
 1f4:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <ex_rx_enable>
						ex_rx_data_complite = false;
 1f8:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
					}
				}
				++ex_rx_index;
 1fc:	cf 5f       	subi	r28, 0xFF	; 255
 1fe:	c0 93 7f 00 	sts	0x007F, r28	; 0x80007f <ex_rx_index>
 202:	0f c0       	rjmp	.+30     	; 0x222 <__vector_11+0xc6>
			} else if (ex_rx_index == 5)
 204:	c5 30       	cpi	r28, 0x05	; 5
 206:	31 f4       	brne	.+12     	; 0x214 <__vector_11+0xb8>
			{
				ex_rx_buffer_cmd = data;
 208:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <ex_rx_buffer_cmd>
				++ex_rx_index;
 20c:	86 e0       	ldi	r24, 0x06	; 6
 20e:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <ex_rx_index>
 212:	10 c0       	rjmp	.+32     	; 0x234 <__vector_11+0xd8>
			} else if (ex_rx_index > 5)
 214:	c6 30       	cpi	r28, 0x06	; 6
 216:	28 f0       	brcs	.+10     	; 0x222 <__vector_11+0xc6>
			{
				//sub_rx_index = ex_rx_index - 6;
				//ex_rx_buffer_dat[sub_rx_index] = data;
				ex_rx_buffer_dat1 = data;
 218:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <ex_rx_buffer_dat1>
				++ex_rx_index;
 21c:	cf 5f       	subi	r28, 0xFF	; 255
 21e:	c0 93 7f 00 	sts	0x007F, r28	; 0x80007f <ex_rx_index>
			}

			if (ex_rx_index >= RX_BUFFER_SIZE)
 222:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <ex_rx_index>
 226:	86 31       	cpi	r24, 0x16	; 22
 228:	28 f0       	brcs	.+10     	; 0x234 <__vector_11+0xd8>
			{
				ex_rx_enable = false;
 22a:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <ex_rx_enable>
				ex_rx_buffer_overflow=1;
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <ex_rx_buffer_overflow>
			}
			
		}
		
	}
}
 234:	ff 91       	pop	r31
 236:	ef 91       	pop	r30
 238:	cf 91       	pop	r28
 23a:	bf 91       	pop	r27
 23c:	af 91       	pop	r26
 23e:	9f 91       	pop	r25
 240:	8f 91       	pop	r24
 242:	7f 91       	pop	r23
 244:	6f 91       	pop	r22
 246:	5f 91       	pop	r21
 248:	4f 91       	pop	r20
 24a:	3f 91       	pop	r19
 24c:	2f 91       	pop	r18
 24e:	0f 90       	pop	r0
 250:	0f be       	out	0x3f, r0	; 63
 252:	0f 90       	pop	r0
 254:	1f 90       	pop	r1
 256:	18 95       	reti

00000258 <_Z12ExchangeUARTcc>:

void ExchangeUART(char rx_buffer_cmd, char rx_buffer_dat /*char rx_buffer_dat[RX_DATA_SIZE]*/)
{
 258:	cf 93       	push	r28
	//char tmp_rx_buffer[RX_DATA_SIZE];
	//char tmp_rx_buffer;
	if (rx_buffer_cmd == 0x01) // Активация устройства
 25a:	81 30       	cpi	r24, 0x01	; 1
 25c:	a9 f4       	brne	.+42     	; 0x288 <_Z12ExchangeUARTcc+0x30>
 25e:	c6 2f       	mov	r28, r22
	{
		//memset(tmp_rx_buffer, 0, sizeof(tmp_rx_buffer));
		//sprintf(tmp_rx_buffer, "%s", DEVICE_UID);
		//sprintf(tmp_rx_buffer, "%c", '!');
		LEDLAMP_ON(1);
 260:	81 e0       	ldi	r24, 0x01	; 1
 262:	90 e0       	ldi	r25, 0x00	; 0
 264:	fc de       	rcall	.-520    	; 0x5e <_Z10LEDLAMP_ONj>
		//USART_SendPacket(DEVICE_MAC, 0xA2, tmp_rx_buffer);
		USART_SendPacket(DEVICE_MAC, 0x02, rx_buffer_dat);
 266:	4c 2f       	mov	r20, r28
 268:	62 e0       	ldi	r22, 0x02	; 2
 26a:	80 e6       	ldi	r24, 0x60	; 96
 26c:	90 e0       	ldi	r25, 0x00	; 0
 26e:	38 df       	rcall	.-400    	; 0xe0 <_Z16USART_SendPacketPccc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 270:	2f e7       	ldi	r18, 0x7F	; 127
 272:	88 e3       	ldi	r24, 0x38	; 56
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	21 50       	subi	r18, 0x01	; 1
 278:	80 40       	sbci	r24, 0x00	; 0
 27a:	90 40       	sbci	r25, 0x00	; 0
 27c:	e1 f7       	brne	.-8      	; 0x276 <_Z12ExchangeUARTcc+0x1e>
 27e:	00 c0       	rjmp	.+0      	; 0x280 <_Z12ExchangeUARTcc+0x28>
 280:	00 00       	nop
		_delay_ms(50);
		LEDLAMP_OFF(1);
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	90 e0       	ldi	r25, 0x00	; 0
 286:	f6 de       	rcall	.-532    	; 0x74 <_Z11LEDLAMP_OFFj>
	}
}
 288:	cf 91       	pop	r28
 28a:	08 95       	ret

0000028c <main>:

int main(void)
{
	UART_Init(8); //115200
 28c:	88 e0       	ldi	r24, 0x08	; 8
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	fd de       	rcall	.-518    	; 0x8c <_Z9UART_Initj>
    //UART_Init(UBRR_VAL);	// Инициализация UART

	DDRD |= ( 1 << PD3);	// порт на выход
 292:	8b 9a       	sbi	0x11, 3	; 17
	RS485_RS; // Установить RE DE в 0. Прием
 294:	93 98       	cbi	0x12, 3	; 18
	
	DDRC |= ( 1 << PC0) | ( 1 << PC1); // порт на выход
 296:	84 b3       	in	r24, 0x14	; 20
 298:	83 60       	ori	r24, 0x03	; 3
 29a:	84 bb       	out	0x14, r24	; 20
	//_delay_ms(1000);
	//LEDLAMP_ON(0);
	//_delay_ms(1000);
	//LEDLAMP_OFF(0);
	
	sei();
 29c:	78 94       	sei
 29e:	00 00       	nop
	
	while(1)
    {
		_delay_ms(0.0001);
		if (ex_rx_data_complite)
 2a0:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 2a4:	88 23       	and	r24, r24
 2a6:	d9 f3       	breq	.-10     	; 0x29e <main+0x12>
		{
			ex_rx_data_complite = false;
 2a8:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
			ExchangeUART(ex_rx_buffer_cmd, ex_rx_buffer_dat1);
 2ac:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <ex_rx_buffer_dat1>
 2b0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <ex_rx_buffer_cmd>
 2b4:	d1 df       	rcall	.-94     	; 0x258 <_Z12ExchangeUARTcc>
 2b6:	f3 cf       	rjmp	.-26     	; 0x29e <main+0x12>

000002b8 <strcat>:
 2b8:	fb 01       	movw	r30, r22
 2ba:	dc 01       	movw	r26, r24
 2bc:	0d 90       	ld	r0, X+
 2be:	00 20       	and	r0, r0
 2c0:	e9 f7       	brne	.-6      	; 0x2bc <strcat+0x4>
 2c2:	11 97       	sbiw	r26, 0x01	; 1
 2c4:	01 90       	ld	r0, Z+
 2c6:	0d 92       	st	X+, r0
 2c8:	00 20       	and	r0, r0
 2ca:	e1 f7       	brne	.-8      	; 0x2c4 <strcat+0xc>
 2cc:	08 95       	ret

000002ce <sprintf>:
 2ce:	ae e0       	ldi	r26, 0x0E	; 14
 2d0:	b0 e0       	ldi	r27, 0x00	; 0
 2d2:	ec e6       	ldi	r30, 0x6C	; 108
 2d4:	f1 e0       	ldi	r31, 0x01	; 1
 2d6:	aa c2       	rjmp	.+1364   	; 0x82c <__prologue_saves__+0x1c>
 2d8:	0d 89       	ldd	r16, Y+21	; 0x15
 2da:	1e 89       	ldd	r17, Y+22	; 0x16
 2dc:	86 e0       	ldi	r24, 0x06	; 6
 2de:	8c 83       	std	Y+4, r24	; 0x04
 2e0:	1a 83       	std	Y+2, r17	; 0x02
 2e2:	09 83       	std	Y+1, r16	; 0x01
 2e4:	8f ef       	ldi	r24, 0xFF	; 255
 2e6:	9f e7       	ldi	r25, 0x7F	; 127
 2e8:	9e 83       	std	Y+6, r25	; 0x06
 2ea:	8d 83       	std	Y+5, r24	; 0x05
 2ec:	ae 01       	movw	r20, r28
 2ee:	47 5e       	subi	r20, 0xE7	; 231
 2f0:	5f 4f       	sbci	r21, 0xFF	; 255
 2f2:	6f 89       	ldd	r22, Y+23	; 0x17
 2f4:	78 8d       	ldd	r23, Y+24	; 0x18
 2f6:	ce 01       	movw	r24, r28
 2f8:	01 96       	adiw	r24, 0x01	; 1
 2fa:	08 d0       	rcall	.+16     	; 0x30c <vfprintf>
 2fc:	ef 81       	ldd	r30, Y+7	; 0x07
 2fe:	f8 85       	ldd	r31, Y+8	; 0x08
 300:	e0 0f       	add	r30, r16
 302:	f1 1f       	adc	r31, r17
 304:	10 82       	st	Z, r1
 306:	2e 96       	adiw	r28, 0x0e	; 14
 308:	e4 e0       	ldi	r30, 0x04	; 4
 30a:	ac c2       	rjmp	.+1368   	; 0x864 <__epilogue_restores__+0x1c>

0000030c <vfprintf>:
 30c:	ab e0       	ldi	r26, 0x0B	; 11
 30e:	b0 e0       	ldi	r27, 0x00	; 0
 310:	eb e8       	ldi	r30, 0x8B	; 139
 312:	f1 e0       	ldi	r31, 0x01	; 1
 314:	7d c2       	rjmp	.+1274   	; 0x810 <__prologue_saves__>
 316:	6c 01       	movw	r12, r24
 318:	7b 01       	movw	r14, r22
 31a:	8a 01       	movw	r16, r20
 31c:	fc 01       	movw	r30, r24
 31e:	17 82       	std	Z+7, r1	; 0x07
 320:	16 82       	std	Z+6, r1	; 0x06
 322:	83 81       	ldd	r24, Z+3	; 0x03
 324:	81 ff       	sbrs	r24, 1
 326:	bf c1       	rjmp	.+894    	; 0x6a6 <__stack+0x247>
 328:	ce 01       	movw	r24, r28
 32a:	01 96       	adiw	r24, 0x01	; 1
 32c:	3c 01       	movw	r6, r24
 32e:	f6 01       	movw	r30, r12
 330:	93 81       	ldd	r25, Z+3	; 0x03
 332:	f7 01       	movw	r30, r14
 334:	93 fd       	sbrc	r25, 3
 336:	85 91       	lpm	r24, Z+
 338:	93 ff       	sbrs	r25, 3
 33a:	81 91       	ld	r24, Z+
 33c:	7f 01       	movw	r14, r30
 33e:	88 23       	and	r24, r24
 340:	09 f4       	brne	.+2      	; 0x344 <vfprintf+0x38>
 342:	ad c1       	rjmp	.+858    	; 0x69e <__stack+0x23f>
 344:	85 32       	cpi	r24, 0x25	; 37
 346:	39 f4       	brne	.+14     	; 0x356 <vfprintf+0x4a>
 348:	93 fd       	sbrc	r25, 3
 34a:	85 91       	lpm	r24, Z+
 34c:	93 ff       	sbrs	r25, 3
 34e:	81 91       	ld	r24, Z+
 350:	7f 01       	movw	r14, r30
 352:	85 32       	cpi	r24, 0x25	; 37
 354:	21 f4       	brne	.+8      	; 0x35e <vfprintf+0x52>
 356:	b6 01       	movw	r22, r12
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	c0 d1       	rcall	.+896    	; 0x6dc <fputc>
 35c:	e8 cf       	rjmp	.-48     	; 0x32e <vfprintf+0x22>
 35e:	91 2c       	mov	r9, r1
 360:	21 2c       	mov	r2, r1
 362:	31 2c       	mov	r3, r1
 364:	ff e1       	ldi	r31, 0x1F	; 31
 366:	f3 15       	cp	r31, r3
 368:	d8 f0       	brcs	.+54     	; 0x3a0 <vfprintf+0x94>
 36a:	8b 32       	cpi	r24, 0x2B	; 43
 36c:	79 f0       	breq	.+30     	; 0x38c <vfprintf+0x80>
 36e:	38 f4       	brcc	.+14     	; 0x37e <vfprintf+0x72>
 370:	80 32       	cpi	r24, 0x20	; 32
 372:	79 f0       	breq	.+30     	; 0x392 <vfprintf+0x86>
 374:	83 32       	cpi	r24, 0x23	; 35
 376:	a1 f4       	brne	.+40     	; 0x3a0 <vfprintf+0x94>
 378:	23 2d       	mov	r18, r3
 37a:	20 61       	ori	r18, 0x10	; 16
 37c:	1d c0       	rjmp	.+58     	; 0x3b8 <vfprintf+0xac>
 37e:	8d 32       	cpi	r24, 0x2D	; 45
 380:	61 f0       	breq	.+24     	; 0x39a <vfprintf+0x8e>
 382:	80 33       	cpi	r24, 0x30	; 48
 384:	69 f4       	brne	.+26     	; 0x3a0 <vfprintf+0x94>
 386:	23 2d       	mov	r18, r3
 388:	21 60       	ori	r18, 0x01	; 1
 38a:	16 c0       	rjmp	.+44     	; 0x3b8 <vfprintf+0xac>
 38c:	83 2d       	mov	r24, r3
 38e:	82 60       	ori	r24, 0x02	; 2
 390:	38 2e       	mov	r3, r24
 392:	e3 2d       	mov	r30, r3
 394:	e4 60       	ori	r30, 0x04	; 4
 396:	3e 2e       	mov	r3, r30
 398:	2a c0       	rjmp	.+84     	; 0x3ee <vfprintf+0xe2>
 39a:	f3 2d       	mov	r31, r3
 39c:	f8 60       	ori	r31, 0x08	; 8
 39e:	1d c0       	rjmp	.+58     	; 0x3da <vfprintf+0xce>
 3a0:	37 fc       	sbrc	r3, 7
 3a2:	2d c0       	rjmp	.+90     	; 0x3fe <vfprintf+0xf2>
 3a4:	20 ed       	ldi	r18, 0xD0	; 208
 3a6:	28 0f       	add	r18, r24
 3a8:	2a 30       	cpi	r18, 0x0A	; 10
 3aa:	40 f0       	brcs	.+16     	; 0x3bc <vfprintf+0xb0>
 3ac:	8e 32       	cpi	r24, 0x2E	; 46
 3ae:	b9 f4       	brne	.+46     	; 0x3de <vfprintf+0xd2>
 3b0:	36 fc       	sbrc	r3, 6
 3b2:	75 c1       	rjmp	.+746    	; 0x69e <__stack+0x23f>
 3b4:	23 2d       	mov	r18, r3
 3b6:	20 64       	ori	r18, 0x40	; 64
 3b8:	32 2e       	mov	r3, r18
 3ba:	19 c0       	rjmp	.+50     	; 0x3ee <vfprintf+0xe2>
 3bc:	36 fe       	sbrs	r3, 6
 3be:	06 c0       	rjmp	.+12     	; 0x3cc <vfprintf+0xc0>
 3c0:	8a e0       	ldi	r24, 0x0A	; 10
 3c2:	98 9e       	mul	r9, r24
 3c4:	20 0d       	add	r18, r0
 3c6:	11 24       	eor	r1, r1
 3c8:	92 2e       	mov	r9, r18
 3ca:	11 c0       	rjmp	.+34     	; 0x3ee <vfprintf+0xe2>
 3cc:	ea e0       	ldi	r30, 0x0A	; 10
 3ce:	2e 9e       	mul	r2, r30
 3d0:	20 0d       	add	r18, r0
 3d2:	11 24       	eor	r1, r1
 3d4:	22 2e       	mov	r2, r18
 3d6:	f3 2d       	mov	r31, r3
 3d8:	f0 62       	ori	r31, 0x20	; 32
 3da:	3f 2e       	mov	r3, r31
 3dc:	08 c0       	rjmp	.+16     	; 0x3ee <vfprintf+0xe2>
 3de:	8c 36       	cpi	r24, 0x6C	; 108
 3e0:	21 f4       	brne	.+8      	; 0x3ea <vfprintf+0xde>
 3e2:	83 2d       	mov	r24, r3
 3e4:	80 68       	ori	r24, 0x80	; 128
 3e6:	38 2e       	mov	r3, r24
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <vfprintf+0xe2>
 3ea:	88 36       	cpi	r24, 0x68	; 104
 3ec:	41 f4       	brne	.+16     	; 0x3fe <vfprintf+0xf2>
 3ee:	f7 01       	movw	r30, r14
 3f0:	93 fd       	sbrc	r25, 3
 3f2:	85 91       	lpm	r24, Z+
 3f4:	93 ff       	sbrs	r25, 3
 3f6:	81 91       	ld	r24, Z+
 3f8:	7f 01       	movw	r14, r30
 3fa:	81 11       	cpse	r24, r1
 3fc:	b3 cf       	rjmp	.-154    	; 0x364 <vfprintf+0x58>
 3fe:	98 2f       	mov	r25, r24
 400:	9f 7d       	andi	r25, 0xDF	; 223
 402:	95 54       	subi	r25, 0x45	; 69
 404:	93 30       	cpi	r25, 0x03	; 3
 406:	28 f4       	brcc	.+10     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 408:	0c 5f       	subi	r16, 0xFC	; 252
 40a:	1f 4f       	sbci	r17, 0xFF	; 255
 40c:	9f e3       	ldi	r25, 0x3F	; 63
 40e:	99 83       	std	Y+1, r25	; 0x01
 410:	0d c0       	rjmp	.+26     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 412:	83 36       	cpi	r24, 0x63	; 99
 414:	31 f0       	breq	.+12     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 416:	83 37       	cpi	r24, 0x73	; 115
 418:	71 f0       	breq	.+28     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 41a:	83 35       	cpi	r24, 0x53	; 83
 41c:	09 f0       	breq	.+2      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 41e:	55 c0       	rjmp	.+170    	; 0x4ca <__stack+0x6b>
 420:	20 c0       	rjmp	.+64     	; 0x462 <__stack+0x3>
 422:	f8 01       	movw	r30, r16
 424:	80 81       	ld	r24, Z
 426:	89 83       	std	Y+1, r24	; 0x01
 428:	0e 5f       	subi	r16, 0xFE	; 254
 42a:	1f 4f       	sbci	r17, 0xFF	; 255
 42c:	88 24       	eor	r8, r8
 42e:	83 94       	inc	r8
 430:	91 2c       	mov	r9, r1
 432:	53 01       	movw	r10, r6
 434:	12 c0       	rjmp	.+36     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 436:	28 01       	movw	r4, r16
 438:	f2 e0       	ldi	r31, 0x02	; 2
 43a:	4f 0e       	add	r4, r31
 43c:	51 1c       	adc	r5, r1
 43e:	f8 01       	movw	r30, r16
 440:	a0 80       	ld	r10, Z
 442:	b1 80       	ldd	r11, Z+1	; 0x01
 444:	36 fe       	sbrs	r3, 6
 446:	03 c0       	rjmp	.+6      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 448:	69 2d       	mov	r22, r9
 44a:	70 e0       	ldi	r23, 0x00	; 0
 44c:	02 c0       	rjmp	.+4      	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 44e:	6f ef       	ldi	r22, 0xFF	; 255
 450:	7f ef       	ldi	r23, 0xFF	; 255
 452:	c5 01       	movw	r24, r10
 454:	38 d1       	rcall	.+624    	; 0x6c6 <strnlen>
 456:	4c 01       	movw	r8, r24
 458:	82 01       	movw	r16, r4
 45a:	f3 2d       	mov	r31, r3
 45c:	ff 77       	andi	r31, 0x7F	; 127
 45e:	3f 2e       	mov	r3, r31
 460:	15 c0       	rjmp	.+42     	; 0x48c <__stack+0x2d>
 462:	28 01       	movw	r4, r16
 464:	22 e0       	ldi	r18, 0x02	; 2
 466:	42 0e       	add	r4, r18
 468:	51 1c       	adc	r5, r1
 46a:	f8 01       	movw	r30, r16
 46c:	a0 80       	ld	r10, Z
 46e:	b1 80       	ldd	r11, Z+1	; 0x01
 470:	36 fe       	sbrs	r3, 6
 472:	03 c0       	rjmp	.+6      	; 0x47a <__stack+0x1b>
 474:	69 2d       	mov	r22, r9
 476:	70 e0       	ldi	r23, 0x00	; 0
 478:	02 c0       	rjmp	.+4      	; 0x47e <__stack+0x1f>
 47a:	6f ef       	ldi	r22, 0xFF	; 255
 47c:	7f ef       	ldi	r23, 0xFF	; 255
 47e:	c5 01       	movw	r24, r10
 480:	17 d1       	rcall	.+558    	; 0x6b0 <strnlen_P>
 482:	4c 01       	movw	r8, r24
 484:	f3 2d       	mov	r31, r3
 486:	f0 68       	ori	r31, 0x80	; 128
 488:	3f 2e       	mov	r3, r31
 48a:	82 01       	movw	r16, r4
 48c:	33 fc       	sbrc	r3, 3
 48e:	19 c0       	rjmp	.+50     	; 0x4c2 <__stack+0x63>
 490:	82 2d       	mov	r24, r2
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	88 16       	cp	r8, r24
 496:	99 06       	cpc	r9, r25
 498:	a0 f4       	brcc	.+40     	; 0x4c2 <__stack+0x63>
 49a:	b6 01       	movw	r22, r12
 49c:	80 e2       	ldi	r24, 0x20	; 32
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	1d d1       	rcall	.+570    	; 0x6dc <fputc>
 4a2:	2a 94       	dec	r2
 4a4:	f5 cf       	rjmp	.-22     	; 0x490 <__stack+0x31>
 4a6:	f5 01       	movw	r30, r10
 4a8:	37 fc       	sbrc	r3, 7
 4aa:	85 91       	lpm	r24, Z+
 4ac:	37 fe       	sbrs	r3, 7
 4ae:	81 91       	ld	r24, Z+
 4b0:	5f 01       	movw	r10, r30
 4b2:	b6 01       	movw	r22, r12
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	12 d1       	rcall	.+548    	; 0x6dc <fputc>
 4b8:	21 10       	cpse	r2, r1
 4ba:	2a 94       	dec	r2
 4bc:	21 e0       	ldi	r18, 0x01	; 1
 4be:	82 1a       	sub	r8, r18
 4c0:	91 08       	sbc	r9, r1
 4c2:	81 14       	cp	r8, r1
 4c4:	91 04       	cpc	r9, r1
 4c6:	79 f7       	brne	.-34     	; 0x4a6 <__stack+0x47>
 4c8:	e1 c0       	rjmp	.+450    	; 0x68c <__stack+0x22d>
 4ca:	84 36       	cpi	r24, 0x64	; 100
 4cc:	11 f0       	breq	.+4      	; 0x4d2 <__stack+0x73>
 4ce:	89 36       	cpi	r24, 0x69	; 105
 4d0:	39 f5       	brne	.+78     	; 0x520 <__stack+0xc1>
 4d2:	f8 01       	movw	r30, r16
 4d4:	37 fe       	sbrs	r3, 7
 4d6:	07 c0       	rjmp	.+14     	; 0x4e6 <__stack+0x87>
 4d8:	60 81       	ld	r22, Z
 4da:	71 81       	ldd	r23, Z+1	; 0x01
 4dc:	82 81       	ldd	r24, Z+2	; 0x02
 4de:	93 81       	ldd	r25, Z+3	; 0x03
 4e0:	0c 5f       	subi	r16, 0xFC	; 252
 4e2:	1f 4f       	sbci	r17, 0xFF	; 255
 4e4:	08 c0       	rjmp	.+16     	; 0x4f6 <__stack+0x97>
 4e6:	60 81       	ld	r22, Z
 4e8:	71 81       	ldd	r23, Z+1	; 0x01
 4ea:	07 2e       	mov	r0, r23
 4ec:	00 0c       	add	r0, r0
 4ee:	88 0b       	sbc	r24, r24
 4f0:	99 0b       	sbc	r25, r25
 4f2:	0e 5f       	subi	r16, 0xFE	; 254
 4f4:	1f 4f       	sbci	r17, 0xFF	; 255
 4f6:	f3 2d       	mov	r31, r3
 4f8:	ff 76       	andi	r31, 0x6F	; 111
 4fa:	3f 2e       	mov	r3, r31
 4fc:	97 ff       	sbrs	r25, 7
 4fe:	09 c0       	rjmp	.+18     	; 0x512 <__stack+0xb3>
 500:	90 95       	com	r25
 502:	80 95       	com	r24
 504:	70 95       	com	r23
 506:	61 95       	neg	r22
 508:	7f 4f       	sbci	r23, 0xFF	; 255
 50a:	8f 4f       	sbci	r24, 0xFF	; 255
 50c:	9f 4f       	sbci	r25, 0xFF	; 255
 50e:	f0 68       	ori	r31, 0x80	; 128
 510:	3f 2e       	mov	r3, r31
 512:	2a e0       	ldi	r18, 0x0A	; 10
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	a3 01       	movw	r20, r6
 518:	1d d1       	rcall	.+570    	; 0x754 <__ultoa_invert>
 51a:	88 2e       	mov	r8, r24
 51c:	86 18       	sub	r8, r6
 51e:	44 c0       	rjmp	.+136    	; 0x5a8 <__stack+0x149>
 520:	85 37       	cpi	r24, 0x75	; 117
 522:	31 f4       	brne	.+12     	; 0x530 <__stack+0xd1>
 524:	23 2d       	mov	r18, r3
 526:	2f 7e       	andi	r18, 0xEF	; 239
 528:	b2 2e       	mov	r11, r18
 52a:	2a e0       	ldi	r18, 0x0A	; 10
 52c:	30 e0       	ldi	r19, 0x00	; 0
 52e:	25 c0       	rjmp	.+74     	; 0x57a <__stack+0x11b>
 530:	93 2d       	mov	r25, r3
 532:	99 7f       	andi	r25, 0xF9	; 249
 534:	b9 2e       	mov	r11, r25
 536:	8f 36       	cpi	r24, 0x6F	; 111
 538:	c1 f0       	breq	.+48     	; 0x56a <__stack+0x10b>
 53a:	18 f4       	brcc	.+6      	; 0x542 <__stack+0xe3>
 53c:	88 35       	cpi	r24, 0x58	; 88
 53e:	79 f0       	breq	.+30     	; 0x55e <__stack+0xff>
 540:	ae c0       	rjmp	.+348    	; 0x69e <__stack+0x23f>
 542:	80 37       	cpi	r24, 0x70	; 112
 544:	19 f0       	breq	.+6      	; 0x54c <__stack+0xed>
 546:	88 37       	cpi	r24, 0x78	; 120
 548:	21 f0       	breq	.+8      	; 0x552 <__stack+0xf3>
 54a:	a9 c0       	rjmp	.+338    	; 0x69e <__stack+0x23f>
 54c:	e9 2f       	mov	r30, r25
 54e:	e0 61       	ori	r30, 0x10	; 16
 550:	be 2e       	mov	r11, r30
 552:	b4 fe       	sbrs	r11, 4
 554:	0d c0       	rjmp	.+26     	; 0x570 <__stack+0x111>
 556:	fb 2d       	mov	r31, r11
 558:	f4 60       	ori	r31, 0x04	; 4
 55a:	bf 2e       	mov	r11, r31
 55c:	09 c0       	rjmp	.+18     	; 0x570 <__stack+0x111>
 55e:	34 fe       	sbrs	r3, 4
 560:	0a c0       	rjmp	.+20     	; 0x576 <__stack+0x117>
 562:	29 2f       	mov	r18, r25
 564:	26 60       	ori	r18, 0x06	; 6
 566:	b2 2e       	mov	r11, r18
 568:	06 c0       	rjmp	.+12     	; 0x576 <__stack+0x117>
 56a:	28 e0       	ldi	r18, 0x08	; 8
 56c:	30 e0       	ldi	r19, 0x00	; 0
 56e:	05 c0       	rjmp	.+10     	; 0x57a <__stack+0x11b>
 570:	20 e1       	ldi	r18, 0x10	; 16
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <__stack+0x11b>
 576:	20 e1       	ldi	r18, 0x10	; 16
 578:	32 e0       	ldi	r19, 0x02	; 2
 57a:	f8 01       	movw	r30, r16
 57c:	b7 fe       	sbrs	r11, 7
 57e:	07 c0       	rjmp	.+14     	; 0x58e <__stack+0x12f>
 580:	60 81       	ld	r22, Z
 582:	71 81       	ldd	r23, Z+1	; 0x01
 584:	82 81       	ldd	r24, Z+2	; 0x02
 586:	93 81       	ldd	r25, Z+3	; 0x03
 588:	0c 5f       	subi	r16, 0xFC	; 252
 58a:	1f 4f       	sbci	r17, 0xFF	; 255
 58c:	06 c0       	rjmp	.+12     	; 0x59a <__stack+0x13b>
 58e:	60 81       	ld	r22, Z
 590:	71 81       	ldd	r23, Z+1	; 0x01
 592:	80 e0       	ldi	r24, 0x00	; 0
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	0e 5f       	subi	r16, 0xFE	; 254
 598:	1f 4f       	sbci	r17, 0xFF	; 255
 59a:	a3 01       	movw	r20, r6
 59c:	db d0       	rcall	.+438    	; 0x754 <__ultoa_invert>
 59e:	88 2e       	mov	r8, r24
 5a0:	86 18       	sub	r8, r6
 5a2:	fb 2d       	mov	r31, r11
 5a4:	ff 77       	andi	r31, 0x7F	; 127
 5a6:	3f 2e       	mov	r3, r31
 5a8:	36 fe       	sbrs	r3, 6
 5aa:	0d c0       	rjmp	.+26     	; 0x5c6 <__stack+0x167>
 5ac:	23 2d       	mov	r18, r3
 5ae:	2e 7f       	andi	r18, 0xFE	; 254
 5b0:	a2 2e       	mov	r10, r18
 5b2:	89 14       	cp	r8, r9
 5b4:	58 f4       	brcc	.+22     	; 0x5cc <__stack+0x16d>
 5b6:	34 fe       	sbrs	r3, 4
 5b8:	0b c0       	rjmp	.+22     	; 0x5d0 <__stack+0x171>
 5ba:	32 fc       	sbrc	r3, 2
 5bc:	09 c0       	rjmp	.+18     	; 0x5d0 <__stack+0x171>
 5be:	83 2d       	mov	r24, r3
 5c0:	8e 7e       	andi	r24, 0xEE	; 238
 5c2:	a8 2e       	mov	r10, r24
 5c4:	05 c0       	rjmp	.+10     	; 0x5d0 <__stack+0x171>
 5c6:	b8 2c       	mov	r11, r8
 5c8:	a3 2c       	mov	r10, r3
 5ca:	03 c0       	rjmp	.+6      	; 0x5d2 <__stack+0x173>
 5cc:	b8 2c       	mov	r11, r8
 5ce:	01 c0       	rjmp	.+2      	; 0x5d2 <__stack+0x173>
 5d0:	b9 2c       	mov	r11, r9
 5d2:	a4 fe       	sbrs	r10, 4
 5d4:	0f c0       	rjmp	.+30     	; 0x5f4 <__stack+0x195>
 5d6:	fe 01       	movw	r30, r28
 5d8:	e8 0d       	add	r30, r8
 5da:	f1 1d       	adc	r31, r1
 5dc:	80 81       	ld	r24, Z
 5de:	80 33       	cpi	r24, 0x30	; 48
 5e0:	21 f4       	brne	.+8      	; 0x5ea <__stack+0x18b>
 5e2:	9a 2d       	mov	r25, r10
 5e4:	99 7e       	andi	r25, 0xE9	; 233
 5e6:	a9 2e       	mov	r10, r25
 5e8:	09 c0       	rjmp	.+18     	; 0x5fc <__stack+0x19d>
 5ea:	a2 fe       	sbrs	r10, 2
 5ec:	06 c0       	rjmp	.+12     	; 0x5fa <__stack+0x19b>
 5ee:	b3 94       	inc	r11
 5f0:	b3 94       	inc	r11
 5f2:	04 c0       	rjmp	.+8      	; 0x5fc <__stack+0x19d>
 5f4:	8a 2d       	mov	r24, r10
 5f6:	86 78       	andi	r24, 0x86	; 134
 5f8:	09 f0       	breq	.+2      	; 0x5fc <__stack+0x19d>
 5fa:	b3 94       	inc	r11
 5fc:	a3 fc       	sbrc	r10, 3
 5fe:	10 c0       	rjmp	.+32     	; 0x620 <__stack+0x1c1>
 600:	a0 fe       	sbrs	r10, 0
 602:	06 c0       	rjmp	.+12     	; 0x610 <__stack+0x1b1>
 604:	b2 14       	cp	r11, r2
 606:	80 f4       	brcc	.+32     	; 0x628 <__stack+0x1c9>
 608:	28 0c       	add	r2, r8
 60a:	92 2c       	mov	r9, r2
 60c:	9b 18       	sub	r9, r11
 60e:	0d c0       	rjmp	.+26     	; 0x62a <__stack+0x1cb>
 610:	b2 14       	cp	r11, r2
 612:	58 f4       	brcc	.+22     	; 0x62a <__stack+0x1cb>
 614:	b6 01       	movw	r22, r12
 616:	80 e2       	ldi	r24, 0x20	; 32
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	60 d0       	rcall	.+192    	; 0x6dc <fputc>
 61c:	b3 94       	inc	r11
 61e:	f8 cf       	rjmp	.-16     	; 0x610 <__stack+0x1b1>
 620:	b2 14       	cp	r11, r2
 622:	18 f4       	brcc	.+6      	; 0x62a <__stack+0x1cb>
 624:	2b 18       	sub	r2, r11
 626:	02 c0       	rjmp	.+4      	; 0x62c <__stack+0x1cd>
 628:	98 2c       	mov	r9, r8
 62a:	21 2c       	mov	r2, r1
 62c:	a4 fe       	sbrs	r10, 4
 62e:	0f c0       	rjmp	.+30     	; 0x64e <__stack+0x1ef>
 630:	b6 01       	movw	r22, r12
 632:	80 e3       	ldi	r24, 0x30	; 48
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	52 d0       	rcall	.+164    	; 0x6dc <fputc>
 638:	a2 fe       	sbrs	r10, 2
 63a:	16 c0       	rjmp	.+44     	; 0x668 <__stack+0x209>
 63c:	a1 fc       	sbrc	r10, 1
 63e:	03 c0       	rjmp	.+6      	; 0x646 <__stack+0x1e7>
 640:	88 e7       	ldi	r24, 0x78	; 120
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	02 c0       	rjmp	.+4      	; 0x64a <__stack+0x1eb>
 646:	88 e5       	ldi	r24, 0x58	; 88
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	b6 01       	movw	r22, r12
 64c:	0c c0       	rjmp	.+24     	; 0x666 <__stack+0x207>
 64e:	8a 2d       	mov	r24, r10
 650:	86 78       	andi	r24, 0x86	; 134
 652:	51 f0       	breq	.+20     	; 0x668 <__stack+0x209>
 654:	a1 fe       	sbrs	r10, 1
 656:	02 c0       	rjmp	.+4      	; 0x65c <__stack+0x1fd>
 658:	8b e2       	ldi	r24, 0x2B	; 43
 65a:	01 c0       	rjmp	.+2      	; 0x65e <__stack+0x1ff>
 65c:	80 e2       	ldi	r24, 0x20	; 32
 65e:	a7 fc       	sbrc	r10, 7
 660:	8d e2       	ldi	r24, 0x2D	; 45
 662:	b6 01       	movw	r22, r12
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	3a d0       	rcall	.+116    	; 0x6dc <fputc>
 668:	89 14       	cp	r8, r9
 66a:	30 f4       	brcc	.+12     	; 0x678 <__stack+0x219>
 66c:	b6 01       	movw	r22, r12
 66e:	80 e3       	ldi	r24, 0x30	; 48
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	34 d0       	rcall	.+104    	; 0x6dc <fputc>
 674:	9a 94       	dec	r9
 676:	f8 cf       	rjmp	.-16     	; 0x668 <__stack+0x209>
 678:	8a 94       	dec	r8
 67a:	f3 01       	movw	r30, r6
 67c:	e8 0d       	add	r30, r8
 67e:	f1 1d       	adc	r31, r1
 680:	80 81       	ld	r24, Z
 682:	b6 01       	movw	r22, r12
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	2a d0       	rcall	.+84     	; 0x6dc <fputc>
 688:	81 10       	cpse	r8, r1
 68a:	f6 cf       	rjmp	.-20     	; 0x678 <__stack+0x219>
 68c:	22 20       	and	r2, r2
 68e:	09 f4       	brne	.+2      	; 0x692 <__stack+0x233>
 690:	4e ce       	rjmp	.-868    	; 0x32e <vfprintf+0x22>
 692:	b6 01       	movw	r22, r12
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	21 d0       	rcall	.+66     	; 0x6dc <fputc>
 69a:	2a 94       	dec	r2
 69c:	f7 cf       	rjmp	.-18     	; 0x68c <__stack+0x22d>
 69e:	f6 01       	movw	r30, r12
 6a0:	86 81       	ldd	r24, Z+6	; 0x06
 6a2:	97 81       	ldd	r25, Z+7	; 0x07
 6a4:	02 c0       	rjmp	.+4      	; 0x6aa <__stack+0x24b>
 6a6:	8f ef       	ldi	r24, 0xFF	; 255
 6a8:	9f ef       	ldi	r25, 0xFF	; 255
 6aa:	2b 96       	adiw	r28, 0x0b	; 11
 6ac:	e2 e1       	ldi	r30, 0x12	; 18
 6ae:	cc c0       	rjmp	.+408    	; 0x848 <__epilogue_restores__>

000006b0 <strnlen_P>:
 6b0:	fc 01       	movw	r30, r24
 6b2:	05 90       	lpm	r0, Z+
 6b4:	61 50       	subi	r22, 0x01	; 1
 6b6:	70 40       	sbci	r23, 0x00	; 0
 6b8:	01 10       	cpse	r0, r1
 6ba:	d8 f7       	brcc	.-10     	; 0x6b2 <strnlen_P+0x2>
 6bc:	80 95       	com	r24
 6be:	90 95       	com	r25
 6c0:	8e 0f       	add	r24, r30
 6c2:	9f 1f       	adc	r25, r31
 6c4:	08 95       	ret

000006c6 <strnlen>:
 6c6:	fc 01       	movw	r30, r24
 6c8:	61 50       	subi	r22, 0x01	; 1
 6ca:	70 40       	sbci	r23, 0x00	; 0
 6cc:	01 90       	ld	r0, Z+
 6ce:	01 10       	cpse	r0, r1
 6d0:	d8 f7       	brcc	.-10     	; 0x6c8 <strnlen+0x2>
 6d2:	80 95       	com	r24
 6d4:	90 95       	com	r25
 6d6:	8e 0f       	add	r24, r30
 6d8:	9f 1f       	adc	r25, r31
 6da:	08 95       	ret

000006dc <fputc>:
 6dc:	0f 93       	push	r16
 6de:	1f 93       	push	r17
 6e0:	cf 93       	push	r28
 6e2:	df 93       	push	r29
 6e4:	fb 01       	movw	r30, r22
 6e6:	23 81       	ldd	r18, Z+3	; 0x03
 6e8:	21 fd       	sbrc	r18, 1
 6ea:	03 c0       	rjmp	.+6      	; 0x6f2 <fputc+0x16>
 6ec:	8f ef       	ldi	r24, 0xFF	; 255
 6ee:	9f ef       	ldi	r25, 0xFF	; 255
 6f0:	2c c0       	rjmp	.+88     	; 0x74a <fputc+0x6e>
 6f2:	22 ff       	sbrs	r18, 2
 6f4:	16 c0       	rjmp	.+44     	; 0x722 <fputc+0x46>
 6f6:	46 81       	ldd	r20, Z+6	; 0x06
 6f8:	57 81       	ldd	r21, Z+7	; 0x07
 6fa:	24 81       	ldd	r18, Z+4	; 0x04
 6fc:	35 81       	ldd	r19, Z+5	; 0x05
 6fe:	42 17       	cp	r20, r18
 700:	53 07       	cpc	r21, r19
 702:	44 f4       	brge	.+16     	; 0x714 <fputc+0x38>
 704:	a0 81       	ld	r26, Z
 706:	b1 81       	ldd	r27, Z+1	; 0x01
 708:	9d 01       	movw	r18, r26
 70a:	2f 5f       	subi	r18, 0xFF	; 255
 70c:	3f 4f       	sbci	r19, 0xFF	; 255
 70e:	31 83       	std	Z+1, r19	; 0x01
 710:	20 83       	st	Z, r18
 712:	8c 93       	st	X, r24
 714:	26 81       	ldd	r18, Z+6	; 0x06
 716:	37 81       	ldd	r19, Z+7	; 0x07
 718:	2f 5f       	subi	r18, 0xFF	; 255
 71a:	3f 4f       	sbci	r19, 0xFF	; 255
 71c:	37 83       	std	Z+7, r19	; 0x07
 71e:	26 83       	std	Z+6, r18	; 0x06
 720:	14 c0       	rjmp	.+40     	; 0x74a <fputc+0x6e>
 722:	8b 01       	movw	r16, r22
 724:	ec 01       	movw	r28, r24
 726:	fb 01       	movw	r30, r22
 728:	00 84       	ldd	r0, Z+8	; 0x08
 72a:	f1 85       	ldd	r31, Z+9	; 0x09
 72c:	e0 2d       	mov	r30, r0
 72e:	09 95       	icall
 730:	89 2b       	or	r24, r25
 732:	e1 f6       	brne	.-72     	; 0x6ec <fputc+0x10>
 734:	d8 01       	movw	r26, r16
 736:	16 96       	adiw	r26, 0x06	; 6
 738:	8d 91       	ld	r24, X+
 73a:	9c 91       	ld	r25, X
 73c:	17 97       	sbiw	r26, 0x07	; 7
 73e:	01 96       	adiw	r24, 0x01	; 1
 740:	17 96       	adiw	r26, 0x07	; 7
 742:	9c 93       	st	X, r25
 744:	8e 93       	st	-X, r24
 746:	16 97       	sbiw	r26, 0x06	; 6
 748:	ce 01       	movw	r24, r28
 74a:	df 91       	pop	r29
 74c:	cf 91       	pop	r28
 74e:	1f 91       	pop	r17
 750:	0f 91       	pop	r16
 752:	08 95       	ret

00000754 <__ultoa_invert>:
 754:	fa 01       	movw	r30, r20
 756:	aa 27       	eor	r26, r26
 758:	28 30       	cpi	r18, 0x08	; 8
 75a:	51 f1       	breq	.+84     	; 0x7b0 <__ultoa_invert+0x5c>
 75c:	20 31       	cpi	r18, 0x10	; 16
 75e:	81 f1       	breq	.+96     	; 0x7c0 <__ultoa_invert+0x6c>
 760:	e8 94       	clt
 762:	6f 93       	push	r22
 764:	6e 7f       	andi	r22, 0xFE	; 254
 766:	6e 5f       	subi	r22, 0xFE	; 254
 768:	7f 4f       	sbci	r23, 0xFF	; 255
 76a:	8f 4f       	sbci	r24, 0xFF	; 255
 76c:	9f 4f       	sbci	r25, 0xFF	; 255
 76e:	af 4f       	sbci	r26, 0xFF	; 255
 770:	b1 e0       	ldi	r27, 0x01	; 1
 772:	3e d0       	rcall	.+124    	; 0x7f0 <__ultoa_invert+0x9c>
 774:	b4 e0       	ldi	r27, 0x04	; 4
 776:	3c d0       	rcall	.+120    	; 0x7f0 <__ultoa_invert+0x9c>
 778:	67 0f       	add	r22, r23
 77a:	78 1f       	adc	r23, r24
 77c:	89 1f       	adc	r24, r25
 77e:	9a 1f       	adc	r25, r26
 780:	a1 1d       	adc	r26, r1
 782:	68 0f       	add	r22, r24
 784:	79 1f       	adc	r23, r25
 786:	8a 1f       	adc	r24, r26
 788:	91 1d       	adc	r25, r1
 78a:	a1 1d       	adc	r26, r1
 78c:	6a 0f       	add	r22, r26
 78e:	71 1d       	adc	r23, r1
 790:	81 1d       	adc	r24, r1
 792:	91 1d       	adc	r25, r1
 794:	a1 1d       	adc	r26, r1
 796:	20 d0       	rcall	.+64     	; 0x7d8 <__ultoa_invert+0x84>
 798:	09 f4       	brne	.+2      	; 0x79c <__ultoa_invert+0x48>
 79a:	68 94       	set
 79c:	3f 91       	pop	r19
 79e:	2a e0       	ldi	r18, 0x0A	; 10
 7a0:	26 9f       	mul	r18, r22
 7a2:	11 24       	eor	r1, r1
 7a4:	30 19       	sub	r19, r0
 7a6:	30 5d       	subi	r19, 0xD0	; 208
 7a8:	31 93       	st	Z+, r19
 7aa:	de f6       	brtc	.-74     	; 0x762 <__ultoa_invert+0xe>
 7ac:	cf 01       	movw	r24, r30
 7ae:	08 95       	ret
 7b0:	46 2f       	mov	r20, r22
 7b2:	47 70       	andi	r20, 0x07	; 7
 7b4:	40 5d       	subi	r20, 0xD0	; 208
 7b6:	41 93       	st	Z+, r20
 7b8:	b3 e0       	ldi	r27, 0x03	; 3
 7ba:	0f d0       	rcall	.+30     	; 0x7da <__ultoa_invert+0x86>
 7bc:	c9 f7       	brne	.-14     	; 0x7b0 <__ultoa_invert+0x5c>
 7be:	f6 cf       	rjmp	.-20     	; 0x7ac <__ultoa_invert+0x58>
 7c0:	46 2f       	mov	r20, r22
 7c2:	4f 70       	andi	r20, 0x0F	; 15
 7c4:	40 5d       	subi	r20, 0xD0	; 208
 7c6:	4a 33       	cpi	r20, 0x3A	; 58
 7c8:	18 f0       	brcs	.+6      	; 0x7d0 <__ultoa_invert+0x7c>
 7ca:	49 5d       	subi	r20, 0xD9	; 217
 7cc:	31 fd       	sbrc	r19, 1
 7ce:	40 52       	subi	r20, 0x20	; 32
 7d0:	41 93       	st	Z+, r20
 7d2:	02 d0       	rcall	.+4      	; 0x7d8 <__ultoa_invert+0x84>
 7d4:	a9 f7       	brne	.-22     	; 0x7c0 <__ultoa_invert+0x6c>
 7d6:	ea cf       	rjmp	.-44     	; 0x7ac <__ultoa_invert+0x58>
 7d8:	b4 e0       	ldi	r27, 0x04	; 4
 7da:	a6 95       	lsr	r26
 7dc:	97 95       	ror	r25
 7de:	87 95       	ror	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	ba 95       	dec	r27
 7e6:	c9 f7       	brne	.-14     	; 0x7da <__ultoa_invert+0x86>
 7e8:	00 97       	sbiw	r24, 0x00	; 0
 7ea:	61 05       	cpc	r22, r1
 7ec:	71 05       	cpc	r23, r1
 7ee:	08 95       	ret
 7f0:	9b 01       	movw	r18, r22
 7f2:	ac 01       	movw	r20, r24
 7f4:	0a 2e       	mov	r0, r26
 7f6:	06 94       	lsr	r0
 7f8:	57 95       	ror	r21
 7fa:	47 95       	ror	r20
 7fc:	37 95       	ror	r19
 7fe:	27 95       	ror	r18
 800:	ba 95       	dec	r27
 802:	c9 f7       	brne	.-14     	; 0x7f6 <__ultoa_invert+0xa2>
 804:	62 0f       	add	r22, r18
 806:	73 1f       	adc	r23, r19
 808:	84 1f       	adc	r24, r20
 80a:	95 1f       	adc	r25, r21
 80c:	a0 1d       	adc	r26, r0
 80e:	08 95       	ret

00000810 <__prologue_saves__>:
 810:	2f 92       	push	r2
 812:	3f 92       	push	r3
 814:	4f 92       	push	r4
 816:	5f 92       	push	r5
 818:	6f 92       	push	r6
 81a:	7f 92       	push	r7
 81c:	8f 92       	push	r8
 81e:	9f 92       	push	r9
 820:	af 92       	push	r10
 822:	bf 92       	push	r11
 824:	cf 92       	push	r12
 826:	df 92       	push	r13
 828:	ef 92       	push	r14
 82a:	ff 92       	push	r15
 82c:	0f 93       	push	r16
 82e:	1f 93       	push	r17
 830:	cf 93       	push	r28
 832:	df 93       	push	r29
 834:	cd b7       	in	r28, 0x3d	; 61
 836:	de b7       	in	r29, 0x3e	; 62
 838:	ca 1b       	sub	r28, r26
 83a:	db 0b       	sbc	r29, r27
 83c:	0f b6       	in	r0, 0x3f	; 63
 83e:	f8 94       	cli
 840:	de bf       	out	0x3e, r29	; 62
 842:	0f be       	out	0x3f, r0	; 63
 844:	cd bf       	out	0x3d, r28	; 61
 846:	09 94       	ijmp

00000848 <__epilogue_restores__>:
 848:	2a 88       	ldd	r2, Y+18	; 0x12
 84a:	39 88       	ldd	r3, Y+17	; 0x11
 84c:	48 88       	ldd	r4, Y+16	; 0x10
 84e:	5f 84       	ldd	r5, Y+15	; 0x0f
 850:	6e 84       	ldd	r6, Y+14	; 0x0e
 852:	7d 84       	ldd	r7, Y+13	; 0x0d
 854:	8c 84       	ldd	r8, Y+12	; 0x0c
 856:	9b 84       	ldd	r9, Y+11	; 0x0b
 858:	aa 84       	ldd	r10, Y+10	; 0x0a
 85a:	b9 84       	ldd	r11, Y+9	; 0x09
 85c:	c8 84       	ldd	r12, Y+8	; 0x08
 85e:	df 80       	ldd	r13, Y+7	; 0x07
 860:	ee 80       	ldd	r14, Y+6	; 0x06
 862:	fd 80       	ldd	r15, Y+5	; 0x05
 864:	0c 81       	ldd	r16, Y+4	; 0x04
 866:	1b 81       	ldd	r17, Y+3	; 0x03
 868:	aa 81       	ldd	r26, Y+2	; 0x02
 86a:	b9 81       	ldd	r27, Y+1	; 0x01
 86c:	ce 0f       	add	r28, r30
 86e:	d1 1d       	adc	r29, r1
 870:	0f b6       	in	r0, 0x3f	; 63
 872:	f8 94       	cli
 874:	de bf       	out	0x3e, r29	; 62
 876:	0f be       	out	0x3f, r0	; 63
 878:	cd bf       	out	0x3d, r28	; 61
 87a:	ed 01       	movw	r28, r26
 87c:	08 95       	ret

0000087e <_exit>:
 87e:	f8 94       	cli

00000880 <__stop_program>:
 880:	ff cf       	rjmp	.-2      	; 0x880 <__stop_program>

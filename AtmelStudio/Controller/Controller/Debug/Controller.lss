
Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  000008fc  00000990  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00800076  00800076  000009a6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000009a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b49  00000000  00000000  00000aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006fb  00000000  00000000  000015f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000046e  00000000  00000000  00001cec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000130  00000000  00000000  0000215c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000059d  00000000  00000000  0000228c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000425  00000000  00000000  00002829  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00002c4e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 cc 00 	jmp	0x198	; 0x198 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__vector_13>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec ef       	ldi	r30, 0xFC	; 252
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 37       	cpi	r26, 0x76	; 118
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e7       	ldi	r26, 0x76	; 118
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a0 38       	cpi	r26, 0x80	; 128
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 4c 01 	call	0x298	; 0x298 <main>
  8a:	0c 94 7c 04 	jmp	0x8f8	; 0x8f8 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z10LEDLAMP_ONj>:
bool ex_rx_data_complite = false;

// LED ON
void LEDLAMP_ON(unsigned int n_pin)
{
	PORTC |= ( 1 << n_pin );
  92:	95 b3       	in	r25, 0x15	; 21
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	30 e0       	ldi	r19, 0x00	; 0
  98:	02 c0       	rjmp	.+4      	; 0x9e <_Z10LEDLAMP_ONj+0xc>
  9a:	22 0f       	add	r18, r18
  9c:	33 1f       	adc	r19, r19
  9e:	8a 95       	dec	r24
  a0:	e2 f7       	brpl	.-8      	; 0x9a <_Z10LEDLAMP_ONj+0x8>
  a2:	29 2b       	or	r18, r25
  a4:	25 bb       	out	0x15, r18	; 21
  a6:	08 95       	ret

000000a8 <_Z11LEDLAMP_OFFj>:
}

// LED OFF
void LEDLAMP_OFF(unsigned int n_pin)
{
	PORTC &= ~( 1 << n_pin );
  a8:	95 b3       	in	r25, 0x15	; 21
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <_Z11LEDLAMP_OFFj+0xc>
  b0:	22 0f       	add	r18, r18
  b2:	33 1f       	adc	r19, r19
  b4:	8a 95       	dec	r24
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <_Z11LEDLAMP_OFFj+0x8>
  b8:	20 95       	com	r18
  ba:	29 23       	and	r18, r25
  bc:	25 bb       	out	0x15, r18	; 21
  be:	08 95       	ret

000000c0 <_Z9UART_Initj>:
}

void UART_Init (unsigned int speed)
{
	// Устанавливаем скорость Baud Rate
	UBRRH = (unsigned char)( speed >> 8 );
  c0:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char) speed;
  c2:	89 b9       	out	0x09, r24	; 9
	UCSRA |= (1<<U2X); // Удвоение частоты
  c4:	59 9a       	sbi	0x0b, 1	; 11
	
	// Разрешение работы передатчика
	UCSRB = ( 1 << TXEN ) | ( 1 << RXEN ) | (1 << RXCIE ) | (1 << TXCIE );
  c6:	88 ed       	ldi	r24, 0xD8	; 216
  c8:	8a b9       	out	0x0a, r24	; 10
	
	/* Set frame format: 8data, 2stop bit */
	UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);
  ca:	8e e8       	ldi	r24, 0x8E	; 142
  cc:	80 bd       	out	0x20, r24	; 32
  ce:	08 95       	ret

000000d0 <_Z14UART_Send_Charc>:
}

// Send to UART
void UART_Send_Char (char data_tx) ////
{
	while ( !( UCSRA & (1<<5)) ) {}
  d0:	5d 9b       	sbis	0x0b, 5	; 11
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <_Z14UART_Send_Charc>
	RS485_TR;
  d4:	93 9a       	sbi	0x12, 3	; 18
	UDR = data_tx;
  d6:	8c b9       	out	0x0c, r24	; 12
  d8:	08 95       	ret

000000da <_Z15UART_SendStringPc>:
}

// Send to UART
void UART_SendString (char data_tx[])
{
  da:	0f 93       	push	r16
  dc:	1f 93       	push	r17
  de:	cf 93       	push	r28
  e0:	df 93       	push	r29
  e2:	ec 01       	movw	r28, r24
  e4:	8c 01       	movw	r16, r24
  e6:	08 5f       	subi	r16, 0xF8	; 248
  e8:	1f 4f       	sbci	r17, 0xFF	; 255
	int i;
	//len = strlen( data_tx );
	for (i=0; i < RX_BUFFER_SIZE; i++) {
		//LEDLAMP_ON(1);
		UART_Send_Char(data_tx[i]);
  ea:	89 91       	ld	r24, Y+
  ec:	0e 94 68 00 	call	0xd0	; 0xd0 <_Z14UART_Send_Charc>
// Send to UART
void UART_SendString (char data_tx[])
{
	int i;
	//len = strlen( data_tx );
	for (i=0; i < RX_BUFFER_SIZE; i++) {
  f0:	c0 17       	cp	r28, r16
  f2:	d1 07       	cpc	r29, r17
  f4:	d1 f7       	brne	.-12     	; 0xea <_Z15UART_SendStringPc+0x10>
		//LEDLAMP_ON(1);
		UART_Send_Char(data_tx[i]);
		//_delay_ms(50);
		//LEDLAMP_OFF(1);
	}
}
  f6:	df 91       	pop	r29
  f8:	cf 91       	pop	r28
  fa:	1f 91       	pop	r17
  fc:	0f 91       	pop	r16
  fe:	08 95       	ret

00000100 <__vector_13>:

ISR(USART_TXC_vect)
{
 100:	1f 92       	push	r1
 102:	0f 92       	push	r0
 104:	0f b6       	in	r0, 0x3f	; 63
 106:	0f 92       	push	r0
 108:	11 24       	eor	r1, r1
	RS485_RS; // Установить RE DE в 0. Прием
 10a:	93 98       	cbi	0x12, 3	; 18
}
 10c:	0f 90       	pop	r0
 10e:	0f be       	out	0x3f, r0	; 63
 110:	0f 90       	pop	r0
 112:	1f 90       	pop	r1
 114:	18 95       	reti

00000116 <_Z16USART_SendPacketPccc>:

void USART_SendPacket(char rx_device_mac[4], char rx_buffer_cmd, char rx_buffer_dat /*char rx_buffer_dat[RX_DATA_SIZE]*/)
{
 116:	0f 93       	push	r16
 118:	1f 93       	push	r17
 11a:	cf 93       	push	r28
 11c:	df 93       	push	r29
 11e:	cd b7       	in	r28, 0x3d	; 61
 120:	de b7       	in	r29, 0x3e	; 62
 122:	28 97       	sbiw	r28, 0x08	; 8
 124:	0f b6       	in	r0, 0x3f	; 63
 126:	f8 94       	cli
 128:	de bf       	out	0x3e, r29	; 62
 12a:	0f be       	out	0x3f, r0	; 63
 12c:	cd bf       	out	0x3d, r28	; 61
 12e:	fc 01       	movw	r30, r24
																	rx_device_mac[3],
																	rx_buffer_cmd,
																	rx_buffer_dat,	
																	USART_STOPPACKET
																	//*/
																	);
 130:	1f 92       	push	r1
 132:	8c eb       	ldi	r24, 0xBC	; 188
 134:	8f 93       	push	r24
 136:	1f 92       	push	r1
 138:	8c ec       	ldi	r24, 0xCC	; 204
 13a:	8f 93       	push	r24
 13c:	1f 92       	push	r1
 13e:	6f 93       	push	r22
 140:	83 81       	ldd	r24, Z+3	; 0x03
 142:	1f 92       	push	r1
 144:	8f 93       	push	r24
 146:	82 81       	ldd	r24, Z+2	; 0x02
 148:	1f 92       	push	r1
 14a:	8f 93       	push	r24
 14c:	81 81       	ldd	r24, Z+1	; 0x01
 14e:	1f 92       	push	r1
 150:	8f 93       	push	r24
 152:	80 81       	ld	r24, Z
 154:	1f 92       	push	r1
 156:	8f 93       	push	r24
 158:	1f 92       	push	r1
 15a:	1f 92       	push	r1
 15c:	84 e6       	ldi	r24, 0x64	; 100
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	9f 93       	push	r25
 162:	8f 93       	push	r24
 164:	8e 01       	movw	r16, r28
 166:	0f 5f       	subi	r16, 0xFF	; 255
 168:	1f 4f       	sbci	r17, 0xFF	; 255
 16a:	1f 93       	push	r17
 16c:	0f 93       	push	r16
 16e:	0e 94 92 01 	call	0x324	; 0x324 <sprintf>
	//LEDLAMP_ON(1);											
	UART_SendString(tmp_tx_data);
 172:	c8 01       	movw	r24, r16
 174:	0e 94 6d 00 	call	0xda	; 0xda <_Z15UART_SendStringPc>
	//_delay_ms(50);
	//LEDLAMP_OFF(1);
}
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	cd bf       	out	0x3d, r28	; 61
 182:	28 96       	adiw	r28, 0x08	; 8
 184:	0f b6       	in	r0, 0x3f	; 63
 186:	f8 94       	cli
 188:	de bf       	out	0x3e, r29	; 62
 18a:	0f be       	out	0x3f, r0	; 63
 18c:	cd bf       	out	0x3d, r28	; 61
 18e:	df 91       	pop	r29
 190:	cf 91       	pop	r28
 192:	1f 91       	pop	r17
 194:	0f 91       	pop	r16
 196:	08 95       	ret

00000198 <__vector_11>:

ISR(USART_RXC_vect)
{
 198:	1f 92       	push	r1
 19a:	0f 92       	push	r0
 19c:	0f b6       	in	r0, 0x3f	; 63
 19e:	0f 92       	push	r0
 1a0:	11 24       	eor	r1, r1
 1a2:	8f 93       	push	r24
 1a4:	9f 93       	push	r25
 1a6:	af 93       	push	r26
 1a8:	bf 93       	push	r27
 1aa:	ef 93       	push	r30
 1ac:	ff 93       	push	r31
	char status, data; ////
	//unsigned char sub_rx_index;
	status = UCSRA;
 1ae:	8b b1       	in	r24, 0x0b	; 11
	data = UDR;
 1b0:	9c b1       	in	r25, 0x0c	; 12
	if ((status & (FRAMING_ERROR /*| PARITY_ERROR */| DATA_OVERRUN))==0)
 1b2:	88 71       	andi	r24, 0x18	; 24
 1b4:	09 f0       	breq	.+2      	; 0x1b8 <__vector_11+0x20>
 1b6:	48 c0       	rjmp	.+144    	; 0x248 <__vector_11+0xb0>
	{

		if (data == USART_STARTPACKET)	// Получение стартового пакета
 1b8:	91 11       	cpse	r25, r1
 1ba:	11 c0       	rjmp	.+34     	; 0x1de <__vector_11+0x46>
		{
			memset(ex_rx_buffer_adr, 0, sizeof(ex_rx_buffer_adr));// Удаление всей информации
 1bc:	84 e0       	ldi	r24, 0x04	; 4
 1be:	eb e7       	ldi	r30, 0x7B	; 123
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	df 01       	movw	r26, r30
 1c4:	1d 92       	st	X+, r1
 1c6:	8a 95       	dec	r24
 1c8:	e9 f7       	brne	.-6      	; 0x1c4 <__vector_11+0x2c>
			ex_rx_buffer_cmd = 0;
 1ca:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <ex_rx_buffer_cmd>
			//memset(ex_rx_buffer_dat, 0, sizeof(ex_rx_buffer_dat));
			ex_rx_index=0;
 1ce:	10 92 7f 00 	sts	0x007F, r1	; 0x80007f <ex_rx_index>
			ex_rx_enable = true;
 1d2:	81 e0       	ldi	r24, 0x01	; 1
 1d4:	80 93 77 00 	sts	0x0077, r24	; 0x800077 <ex_rx_enable>
			ex_rx_data_complite = false;
 1d8:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
 1dc:	10 c0       	rjmp	.+32     	; 0x1fe <__vector_11+0x66>
			
		}
		
		if ( (data == USART_STOPPACKET) && (ex_rx_enable == 1) )
 1de:	9c 3b       	cpi	r25, 0xBC	; 188
 1e0:	51 f4       	brne	.+20     	; 0x1f6 <__vector_11+0x5e>
 1e2:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <ex_rx_enable>
 1e6:	88 23       	and	r24, r24
 1e8:	79 f1       	breq	.+94     	; 0x248 <__vector_11+0xb0>
		{
			ex_rx_enable = 0;
 1ea:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <ex_rx_enable>
			ex_rx_data_complite = true;
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	80 93 76 00 	sts	0x0076, r24	; 0x800076 <__data_end>
 1f4:	29 c0       	rjmp	.+82     	; 0x248 <__vector_11+0xb0>
		}
		
		if (ex_rx_enable == 1)
 1f6:	80 91 77 00 	lds	r24, 0x0077	; 0x800077 <ex_rx_enable>
 1fa:	88 23       	and	r24, r24
 1fc:	29 f1       	breq	.+74     	; 0x248 <__vector_11+0xb0>
		{
			if ( (ex_rx_index >= 0) && (ex_rx_index <= 4) ) // запись первых 4х данных
 1fe:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <ex_rx_index>
 202:	85 30       	cpi	r24, 0x05	; 5
 204:	48 f4       	brcc	.+18     	; 0x218 <__vector_11+0x80>
			{
				ex_rx_buffer_adr[ex_rx_index] = data;
 206:	e8 2f       	mov	r30, r24
 208:	f0 e0       	ldi	r31, 0x00	; 0
 20a:	e5 58       	subi	r30, 0x85	; 133
 20c:	ff 4f       	sbci	r31, 0xFF	; 255
 20e:	90 83       	st	Z, r25
					//{
					//	ex_rx_enable = 0;
					//	ex_rx_data_complite = false;
					//}
				}
				++ex_rx_index;
 210:	8f 5f       	subi	r24, 0xFF	; 255
 212:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <ex_rx_index>
 216:	0f c0       	rjmp	.+30     	; 0x236 <__vector_11+0x9e>
			} else if (ex_rx_index == 5) // записываем адрес ДБК
 218:	85 30       	cpi	r24, 0x05	; 5
 21a:	31 f4       	brne	.+12     	; 0x228 <__vector_11+0x90>
			{
				ex_rx_buffer_cmd = data;
 21c:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <ex_rx_buffer_cmd>
				++ex_rx_index;
 220:	86 e0       	ldi	r24, 0x06	; 6
 222:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <ex_rx_index>
 226:	10 c0       	rjmp	.+32     	; 0x248 <__vector_11+0xb0>
			} else if (ex_rx_index > 5)
 228:	86 30       	cpi	r24, 0x06	; 6
 22a:	28 f0       	brcs	.+10     	; 0x236 <__vector_11+0x9e>
			{
				//sub_rx_index = ex_rx_index - 6;
				//ex_rx_buffer_dat[sub_rx_index] = data;
				ex_rx_buffer_dat1 = data;
 22c:	90 93 79 00 	sts	0x0079, r25	; 0x800079 <ex_rx_buffer_dat1>
				++ex_rx_index;
 230:	8f 5f       	subi	r24, 0xFF	; 255
 232:	80 93 7f 00 	sts	0x007F, r24	; 0x80007f <ex_rx_index>
			}

			if (ex_rx_index >= RX_BUFFER_SIZE)
 236:	80 91 7f 00 	lds	r24, 0x007F	; 0x80007f <ex_rx_index>
 23a:	88 30       	cpi	r24, 0x08	; 8
 23c:	28 f0       	brcs	.+10     	; 0x248 <__vector_11+0xb0>
			{
				ex_rx_enable = false;
 23e:	10 92 77 00 	sts	0x0077, r1	; 0x800077 <ex_rx_enable>
				ex_rx_buffer_overflow=1;
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	80 93 78 00 	sts	0x0078, r24	; 0x800078 <ex_rx_buffer_overflow>
			}
			
		}
		
	}
}
 248:	ff 91       	pop	r31
 24a:	ef 91       	pop	r30
 24c:	bf 91       	pop	r27
 24e:	af 91       	pop	r26
 250:	9f 91       	pop	r25
 252:	8f 91       	pop	r24
 254:	0f 90       	pop	r0
 256:	0f be       	out	0x3f, r0	; 63
 258:	0f 90       	pop	r0
 25a:	1f 90       	pop	r1
 25c:	18 95       	reti

0000025e <_Z12ExchangeUARTcc>:

void ExchangeUART(char rx_buffer_cmd, char rx_buffer_dat /*char rx_buffer_dat[RX_DATA_SIZE]*/)
{
 25e:	cf 93       	push	r28
	//char tmp_rx_buffer[RX_DATA_SIZE];
	if (rx_buffer_cmd == 0x02) // Активация устройства
 260:	82 30       	cpi	r24, 0x02	; 2
 262:	c1 f4       	brne	.+48     	; 0x294 <_Z12ExchangeUARTcc+0x36>
 264:	c6 2f       	mov	r28, r22
	{
		//memset(tmp_rx_buffer, 0, sizeof(tmp_rx_buffer));
		//sprintf(tmp_rx_buffer, "%s", "GOOD!!!");
		LEDLAMP_ON(1);
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 49 00 	call	0x92	; 0x92 <_Z10LEDLAMP_ONj>
		//USART_SendPacket(DEVICE_MAC, 0xA2, tmp_rx_buffer);
		USART_SendPacket(DEVICE_MAC, 0x01, rx_buffer_dat);
 26e:	4c 2f       	mov	r20, r28
 270:	61 e0       	ldi	r22, 0x01	; 1
 272:	80 e6       	ldi	r24, 0x60	; 96
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	0e 94 8b 00 	call	0x116	; 0x116 <_Z16USART_SendPacketPccc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 27a:	2f e7       	ldi	r18, 0x7F	; 127
 27c:	88 e3       	ldi	r24, 0x38	; 56
 27e:	91 e0       	ldi	r25, 0x01	; 1
 280:	21 50       	subi	r18, 0x01	; 1
 282:	80 40       	sbci	r24, 0x00	; 0
 284:	90 40       	sbci	r25, 0x00	; 0
 286:	e1 f7       	brne	.-8      	; 0x280 <_Z12ExchangeUARTcc+0x22>
 288:	00 c0       	rjmp	.+0      	; 0x28a <_Z12ExchangeUARTcc+0x2c>
 28a:	00 00       	nop
		_delay_ms(50);
		LEDLAMP_OFF(1);
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	90 e0       	ldi	r25, 0x00	; 0
 290:	0e 94 54 00 	call	0xa8	; 0xa8 <_Z11LEDLAMP_OFFj>
	}
}
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <main>:

int main(void)
{
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	00 d0       	rcall	.+0      	; 0x29e <main+0x6>
 29e:	00 d0       	rcall	.+0      	; 0x2a0 <main+0x8>
 2a0:	cd b7       	in	r28, 0x3d	; 61
 2a2:	de b7       	in	r29, 0x3e	; 62
	UART_Init(8); //115200
 2a4:	88 e0       	ldi	r24, 0x08	; 8
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	0e 94 60 00 	call	0xc0	; 0xc0 <_Z9UART_Initj>
	char rx_device_mac[4] = {0xF2, 0xF2, 0xF2, 0xF2};
 2ac:	82 ef       	ldi	r24, 0xF2	; 242
 2ae:	89 83       	std	Y+1, r24	; 0x01
 2b0:	8a 83       	std	Y+2, r24	; 0x02
 2b2:	8b 83       	std	Y+3, r24	; 0x03
 2b4:	8c 83       	std	Y+4, r24	; 0x04
		
	
	DDRD |= ( 1 << PD3);	// Порт на выход
 2b6:	8b 9a       	sbi	0x11, 3	; 17
	RS485_RS; // Установить RE DE в 0. Прием
 2b8:	93 98       	cbi	0x12, 3	; 18
	//PORTD = ( 1 << PD3);	// порт на 1
	
	DDRC |= ( 1 << PC0) | ( 1 << PC1);	// Порт на выход
 2ba:	84 b3       	in	r24, 0x14	; 20
 2bc:	83 60       	ori	r24, 0x03	; 3
 2be:	84 bb       	out	0x14, r24	; 20
	
	sei();
 2c0:	78 94       	sei
 2c2:	8f e2       	ldi	r24, 0x2F	; 47
 2c4:	95 e7       	ldi	r25, 0x75	; 117
 2c6:	01 97       	sbiw	r24, 0x01	; 1
 2c8:	f1 f7       	brne	.-4      	; 0x2c6 <main+0x2e>
 2ca:	00 c0       	rjmp	.+0      	; 0x2cc <main+0x34>
 2cc:	00 00       	nop
	//ex_rx_data_complite = true;
	//_delay_ms(1500);
	//USART_SendPacket(rx_device_mac, 0xA1, ex_rx_buffer_dat1);
	_delay_ms(15);
	//memset(ex_rx_buffer_dat, 0, sizeof(ex_rx_buffer_dat));
	USART_SendPacket(rx_device_mac, 0x01, ex_rx_buffer_dat1);
 2ce:	40 91 79 00 	lds	r20, 0x0079	; 0x800079 <ex_rx_buffer_dat1>
 2d2:	61 e0       	ldi	r22, 0x01	; 1
 2d4:	ce 01       	movw	r24, r28
 2d6:	01 96       	adiw	r24, 0x01	; 1
 2d8:	0e 94 8b 00 	call	0x116	; 0x116 <_Z16USART_SendPacketPccc>
	while(1)
	{
		LEDLAMP_ON(0);
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	90 e0       	ldi	r25, 0x00	; 0
 2e0:	0e 94 49 00 	call	0x92	; 0x92 <_Z10LEDLAMP_ONj>
 2e4:	9f e7       	ldi	r25, 0x7F	; 127
 2e6:	28 e3       	ldi	r18, 0x38	; 56
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	91 50       	subi	r25, 0x01	; 1
 2ec:	20 40       	sbci	r18, 0x00	; 0
 2ee:	80 40       	sbci	r24, 0x00	; 0
 2f0:	e1 f7       	brne	.-8      	; 0x2ea <main+0x52>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <main+0x5c>
 2f4:	00 00       	nop
		_delay_ms(50);
		LEDLAMP_OFF(0);
 2f6:	80 e0       	ldi	r24, 0x00	; 0
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	0e 94 54 00 	call	0xa8	; 0xa8 <_Z11LEDLAMP_OFFj>
		//PORTD = ~( 1 << PD3);
		//RS485_RS; 
		//_delay_ms(1);
		if (ex_rx_data_complite)
 2fe:	80 91 76 00 	lds	r24, 0x0076	; 0x800076 <__data_end>
 302:	88 23       	and	r24, r24
 304:	41 f0       	breq	.+16     	; 0x316 <main+0x7e>
		{
			ex_rx_data_complite = false;
 306:	10 92 76 00 	sts	0x0076, r1	; 0x800076 <__data_end>
			ExchangeUART(ex_rx_buffer_cmd, ex_rx_buffer_dat1);
 30a:	60 91 79 00 	lds	r22, 0x0079	; 0x800079 <ex_rx_buffer_dat1>
 30e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <ex_rx_buffer_cmd>
 312:	0e 94 2f 01 	call	0x25e	; 0x25e <_Z12ExchangeUARTcc>
 316:	8f e2       	ldi	r24, 0x2F	; 47
 318:	95 e7       	ldi	r25, 0x75	; 117
 31a:	01 97       	sbiw	r24, 0x01	; 1
 31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x82>
 31e:	00 c0       	rjmp	.+0      	; 0x320 <main+0x88>
 320:	00 00       	nop
 322:	dc cf       	rjmp	.-72     	; 0x2dc <main+0x44>

00000324 <sprintf>:
 324:	ae e0       	ldi	r26, 0x0E	; 14
 326:	b0 e0       	ldi	r27, 0x00	; 0
 328:	e8 e9       	ldi	r30, 0x98	; 152
 32a:	f1 e0       	ldi	r31, 0x01	; 1
 32c:	0c 94 53 04 	jmp	0x8a6	; 0x8a6 <__prologue_saves__+0x1c>
 330:	0d 89       	ldd	r16, Y+21	; 0x15
 332:	1e 89       	ldd	r17, Y+22	; 0x16
 334:	86 e0       	ldi	r24, 0x06	; 6
 336:	8c 83       	std	Y+4, r24	; 0x04
 338:	1a 83       	std	Y+2, r17	; 0x02
 33a:	09 83       	std	Y+1, r16	; 0x01
 33c:	8f ef       	ldi	r24, 0xFF	; 255
 33e:	9f e7       	ldi	r25, 0x7F	; 127
 340:	9e 83       	std	Y+6, r25	; 0x06
 342:	8d 83       	std	Y+5, r24	; 0x05
 344:	ae 01       	movw	r20, r28
 346:	47 5e       	subi	r20, 0xE7	; 231
 348:	5f 4f       	sbci	r21, 0xFF	; 255
 34a:	6f 89       	ldd	r22, Y+23	; 0x17
 34c:	78 8d       	ldd	r23, Y+24	; 0x18
 34e:	ce 01       	movw	r24, r28
 350:	01 96       	adiw	r24, 0x01	; 1
 352:	0e 94 b4 01 	call	0x368	; 0x368 <vfprintf>
 356:	ef 81       	ldd	r30, Y+7	; 0x07
 358:	f8 85       	ldd	r31, Y+8	; 0x08
 35a:	e0 0f       	add	r30, r16
 35c:	f1 1f       	adc	r31, r17
 35e:	10 82       	st	Z, r1
 360:	2e 96       	adiw	r28, 0x0e	; 14
 362:	e4 e0       	ldi	r30, 0x04	; 4
 364:	0c 94 6f 04 	jmp	0x8de	; 0x8de <__epilogue_restores__+0x1c>

00000368 <vfprintf>:
 368:	ab e0       	ldi	r26, 0x0B	; 11
 36a:	b0 e0       	ldi	r27, 0x00	; 0
 36c:	ea eb       	ldi	r30, 0xBA	; 186
 36e:	f1 e0       	ldi	r31, 0x01	; 1
 370:	0c 94 45 04 	jmp	0x88a	; 0x88a <__prologue_saves__>
 374:	6c 01       	movw	r12, r24
 376:	7b 01       	movw	r14, r22
 378:	8a 01       	movw	r16, r20
 37a:	fc 01       	movw	r30, r24
 37c:	17 82       	std	Z+7, r1	; 0x07
 37e:	16 82       	std	Z+6, r1	; 0x06
 380:	83 81       	ldd	r24, Z+3	; 0x03
 382:	81 ff       	sbrs	r24, 1
 384:	cc c1       	rjmp	.+920    	; 0x71e <__stack+0x2bf>
 386:	ce 01       	movw	r24, r28
 388:	01 96       	adiw	r24, 0x01	; 1
 38a:	3c 01       	movw	r6, r24
 38c:	f6 01       	movw	r30, r12
 38e:	93 81       	ldd	r25, Z+3	; 0x03
 390:	f7 01       	movw	r30, r14
 392:	93 fd       	sbrc	r25, 3
 394:	85 91       	lpm	r24, Z+
 396:	93 ff       	sbrs	r25, 3
 398:	81 91       	ld	r24, Z+
 39a:	7f 01       	movw	r14, r30
 39c:	88 23       	and	r24, r24
 39e:	09 f4       	brne	.+2      	; 0x3a2 <vfprintf+0x3a>
 3a0:	ba c1       	rjmp	.+884    	; 0x716 <__stack+0x2b7>
 3a2:	85 32       	cpi	r24, 0x25	; 37
 3a4:	39 f4       	brne	.+14     	; 0x3b4 <vfprintf+0x4c>
 3a6:	93 fd       	sbrc	r25, 3
 3a8:	85 91       	lpm	r24, Z+
 3aa:	93 ff       	sbrs	r25, 3
 3ac:	81 91       	ld	r24, Z+
 3ae:	7f 01       	movw	r14, r30
 3b0:	85 32       	cpi	r24, 0x25	; 37
 3b2:	29 f4       	brne	.+10     	; 0x3be <vfprintf+0x56>
 3b4:	b6 01       	movw	r22, r12
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 3bc:	e7 cf       	rjmp	.-50     	; 0x38c <vfprintf+0x24>
 3be:	91 2c       	mov	r9, r1
 3c0:	21 2c       	mov	r2, r1
 3c2:	31 2c       	mov	r3, r1
 3c4:	ff e1       	ldi	r31, 0x1F	; 31
 3c6:	f3 15       	cp	r31, r3
 3c8:	d8 f0       	brcs	.+54     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ca:	8b 32       	cpi	r24, 0x2B	; 43
 3cc:	79 f0       	breq	.+30     	; 0x3ec <vfprintf+0x84>
 3ce:	38 f4       	brcc	.+14     	; 0x3de <vfprintf+0x76>
 3d0:	80 32       	cpi	r24, 0x20	; 32
 3d2:	79 f0       	breq	.+30     	; 0x3f2 <vfprintf+0x8a>
 3d4:	83 32       	cpi	r24, 0x23	; 35
 3d6:	a1 f4       	brne	.+40     	; 0x400 <__LOCK_REGION_LENGTH__>
 3d8:	23 2d       	mov	r18, r3
 3da:	20 61       	ori	r18, 0x10	; 16
 3dc:	1d c0       	rjmp	.+58     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3de:	8d 32       	cpi	r24, 0x2D	; 45
 3e0:	61 f0       	breq	.+24     	; 0x3fa <vfprintf+0x92>
 3e2:	80 33       	cpi	r24, 0x30	; 48
 3e4:	69 f4       	brne	.+26     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e6:	23 2d       	mov	r18, r3
 3e8:	21 60       	ori	r18, 0x01	; 1
 3ea:	16 c0       	rjmp	.+44     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 3ec:	83 2d       	mov	r24, r3
 3ee:	82 60       	ori	r24, 0x02	; 2
 3f0:	38 2e       	mov	r3, r24
 3f2:	e3 2d       	mov	r30, r3
 3f4:	e4 60       	ori	r30, 0x04	; 4
 3f6:	3e 2e       	mov	r3, r30
 3f8:	2a c0       	rjmp	.+84     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 3fa:	f3 2d       	mov	r31, r3
 3fc:	f8 60       	ori	r31, 0x08	; 8
 3fe:	1d c0       	rjmp	.+58     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 400:	37 fc       	sbrc	r3, 7
 402:	2d c0       	rjmp	.+90     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 404:	20 ed       	ldi	r18, 0xD0	; 208
 406:	28 0f       	add	r18, r24
 408:	2a 30       	cpi	r18, 0x0A	; 10
 40a:	40 f0       	brcs	.+16     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 40c:	8e 32       	cpi	r24, 0x2E	; 46
 40e:	b9 f4       	brne	.+46     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 410:	36 fc       	sbrc	r3, 6
 412:	81 c1       	rjmp	.+770    	; 0x716 <__stack+0x2b7>
 414:	23 2d       	mov	r18, r3
 416:	20 64       	ori	r18, 0x40	; 64
 418:	32 2e       	mov	r3, r18
 41a:	19 c0       	rjmp	.+50     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 41c:	36 fe       	sbrs	r3, 6
 41e:	06 c0       	rjmp	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 420:	8a e0       	ldi	r24, 0x0A	; 10
 422:	98 9e       	mul	r9, r24
 424:	20 0d       	add	r18, r0
 426:	11 24       	eor	r1, r1
 428:	92 2e       	mov	r9, r18
 42a:	11 c0       	rjmp	.+34     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 42c:	ea e0       	ldi	r30, 0x0A	; 10
 42e:	2e 9e       	mul	r2, r30
 430:	20 0d       	add	r18, r0
 432:	11 24       	eor	r1, r1
 434:	22 2e       	mov	r2, r18
 436:	f3 2d       	mov	r31, r3
 438:	f0 62       	ori	r31, 0x20	; 32
 43a:	3f 2e       	mov	r3, r31
 43c:	08 c0       	rjmp	.+16     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 43e:	8c 36       	cpi	r24, 0x6C	; 108
 440:	21 f4       	brne	.+8      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 442:	83 2d       	mov	r24, r3
 444:	80 68       	ori	r24, 0x80	; 128
 446:	38 2e       	mov	r3, r24
 448:	02 c0       	rjmp	.+4      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 44a:	88 36       	cpi	r24, 0x68	; 104
 44c:	41 f4       	brne	.+16     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 44e:	f7 01       	movw	r30, r14
 450:	93 fd       	sbrc	r25, 3
 452:	85 91       	lpm	r24, Z+
 454:	93 ff       	sbrs	r25, 3
 456:	81 91       	ld	r24, Z+
 458:	7f 01       	movw	r14, r30
 45a:	81 11       	cpse	r24, r1
 45c:	b3 cf       	rjmp	.-154    	; 0x3c4 <vfprintf+0x5c>
 45e:	98 2f       	mov	r25, r24
 460:	9f 7d       	andi	r25, 0xDF	; 223
 462:	95 54       	subi	r25, 0x45	; 69
 464:	93 30       	cpi	r25, 0x03	; 3
 466:	28 f4       	brcc	.+10     	; 0x472 <__stack+0x13>
 468:	0c 5f       	subi	r16, 0xFC	; 252
 46a:	1f 4f       	sbci	r17, 0xFF	; 255
 46c:	9f e3       	ldi	r25, 0x3F	; 63
 46e:	99 83       	std	Y+1, r25	; 0x01
 470:	0d c0       	rjmp	.+26     	; 0x48c <__stack+0x2d>
 472:	83 36       	cpi	r24, 0x63	; 99
 474:	31 f0       	breq	.+12     	; 0x482 <__stack+0x23>
 476:	83 37       	cpi	r24, 0x73	; 115
 478:	71 f0       	breq	.+28     	; 0x496 <__stack+0x37>
 47a:	83 35       	cpi	r24, 0x53	; 83
 47c:	09 f0       	breq	.+2      	; 0x480 <__stack+0x21>
 47e:	59 c0       	rjmp	.+178    	; 0x532 <__stack+0xd3>
 480:	21 c0       	rjmp	.+66     	; 0x4c4 <__stack+0x65>
 482:	f8 01       	movw	r30, r16
 484:	80 81       	ld	r24, Z
 486:	89 83       	std	Y+1, r24	; 0x01
 488:	0e 5f       	subi	r16, 0xFE	; 254
 48a:	1f 4f       	sbci	r17, 0xFF	; 255
 48c:	88 24       	eor	r8, r8
 48e:	83 94       	inc	r8
 490:	91 2c       	mov	r9, r1
 492:	53 01       	movw	r10, r6
 494:	13 c0       	rjmp	.+38     	; 0x4bc <__stack+0x5d>
 496:	28 01       	movw	r4, r16
 498:	f2 e0       	ldi	r31, 0x02	; 2
 49a:	4f 0e       	add	r4, r31
 49c:	51 1c       	adc	r5, r1
 49e:	f8 01       	movw	r30, r16
 4a0:	a0 80       	ld	r10, Z
 4a2:	b1 80       	ldd	r11, Z+1	; 0x01
 4a4:	36 fe       	sbrs	r3, 6
 4a6:	03 c0       	rjmp	.+6      	; 0x4ae <__stack+0x4f>
 4a8:	69 2d       	mov	r22, r9
 4aa:	70 e0       	ldi	r23, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__stack+0x53>
 4ae:	6f ef       	ldi	r22, 0xFF	; 255
 4b0:	7f ef       	ldi	r23, 0xFF	; 255
 4b2:	c5 01       	movw	r24, r10
 4b4:	0e 94 a0 03 	call	0x740	; 0x740 <strnlen>
 4b8:	4c 01       	movw	r8, r24
 4ba:	82 01       	movw	r16, r4
 4bc:	f3 2d       	mov	r31, r3
 4be:	ff 77       	andi	r31, 0x7F	; 127
 4c0:	3f 2e       	mov	r3, r31
 4c2:	16 c0       	rjmp	.+44     	; 0x4f0 <__stack+0x91>
 4c4:	28 01       	movw	r4, r16
 4c6:	22 e0       	ldi	r18, 0x02	; 2
 4c8:	42 0e       	add	r4, r18
 4ca:	51 1c       	adc	r5, r1
 4cc:	f8 01       	movw	r30, r16
 4ce:	a0 80       	ld	r10, Z
 4d0:	b1 80       	ldd	r11, Z+1	; 0x01
 4d2:	36 fe       	sbrs	r3, 6
 4d4:	03 c0       	rjmp	.+6      	; 0x4dc <__stack+0x7d>
 4d6:	69 2d       	mov	r22, r9
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <__stack+0x81>
 4dc:	6f ef       	ldi	r22, 0xFF	; 255
 4de:	7f ef       	ldi	r23, 0xFF	; 255
 4e0:	c5 01       	movw	r24, r10
 4e2:	0e 94 95 03 	call	0x72a	; 0x72a <strnlen_P>
 4e6:	4c 01       	movw	r8, r24
 4e8:	f3 2d       	mov	r31, r3
 4ea:	f0 68       	ori	r31, 0x80	; 128
 4ec:	3f 2e       	mov	r3, r31
 4ee:	82 01       	movw	r16, r4
 4f0:	33 fc       	sbrc	r3, 3
 4f2:	1b c0       	rjmp	.+54     	; 0x52a <__stack+0xcb>
 4f4:	82 2d       	mov	r24, r2
 4f6:	90 e0       	ldi	r25, 0x00	; 0
 4f8:	88 16       	cp	r8, r24
 4fa:	99 06       	cpc	r9, r25
 4fc:	b0 f4       	brcc	.+44     	; 0x52a <__stack+0xcb>
 4fe:	b6 01       	movw	r22, r12
 500:	80 e2       	ldi	r24, 0x20	; 32
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 508:	2a 94       	dec	r2
 50a:	f4 cf       	rjmp	.-24     	; 0x4f4 <__stack+0x95>
 50c:	f5 01       	movw	r30, r10
 50e:	37 fc       	sbrc	r3, 7
 510:	85 91       	lpm	r24, Z+
 512:	37 fe       	sbrs	r3, 7
 514:	81 91       	ld	r24, Z+
 516:	5f 01       	movw	r10, r30
 518:	b6 01       	movw	r22, r12
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 520:	21 10       	cpse	r2, r1
 522:	2a 94       	dec	r2
 524:	21 e0       	ldi	r18, 0x01	; 1
 526:	82 1a       	sub	r8, r18
 528:	91 08       	sbc	r9, r1
 52a:	81 14       	cp	r8, r1
 52c:	91 04       	cpc	r9, r1
 52e:	71 f7       	brne	.-36     	; 0x50c <__stack+0xad>
 530:	e8 c0       	rjmp	.+464    	; 0x702 <__stack+0x2a3>
 532:	84 36       	cpi	r24, 0x64	; 100
 534:	11 f0       	breq	.+4      	; 0x53a <__stack+0xdb>
 536:	89 36       	cpi	r24, 0x69	; 105
 538:	41 f5       	brne	.+80     	; 0x58a <__stack+0x12b>
 53a:	f8 01       	movw	r30, r16
 53c:	37 fe       	sbrs	r3, 7
 53e:	07 c0       	rjmp	.+14     	; 0x54e <__stack+0xef>
 540:	60 81       	ld	r22, Z
 542:	71 81       	ldd	r23, Z+1	; 0x01
 544:	82 81       	ldd	r24, Z+2	; 0x02
 546:	93 81       	ldd	r25, Z+3	; 0x03
 548:	0c 5f       	subi	r16, 0xFC	; 252
 54a:	1f 4f       	sbci	r17, 0xFF	; 255
 54c:	08 c0       	rjmp	.+16     	; 0x55e <__stack+0xff>
 54e:	60 81       	ld	r22, Z
 550:	71 81       	ldd	r23, Z+1	; 0x01
 552:	07 2e       	mov	r0, r23
 554:	00 0c       	add	r0, r0
 556:	88 0b       	sbc	r24, r24
 558:	99 0b       	sbc	r25, r25
 55a:	0e 5f       	subi	r16, 0xFE	; 254
 55c:	1f 4f       	sbci	r17, 0xFF	; 255
 55e:	f3 2d       	mov	r31, r3
 560:	ff 76       	andi	r31, 0x6F	; 111
 562:	3f 2e       	mov	r3, r31
 564:	97 ff       	sbrs	r25, 7
 566:	09 c0       	rjmp	.+18     	; 0x57a <__stack+0x11b>
 568:	90 95       	com	r25
 56a:	80 95       	com	r24
 56c:	70 95       	com	r23
 56e:	61 95       	neg	r22
 570:	7f 4f       	sbci	r23, 0xFF	; 255
 572:	8f 4f       	sbci	r24, 0xFF	; 255
 574:	9f 4f       	sbci	r25, 0xFF	; 255
 576:	f0 68       	ori	r31, 0x80	; 128
 578:	3f 2e       	mov	r3, r31
 57a:	2a e0       	ldi	r18, 0x0A	; 10
 57c:	30 e0       	ldi	r19, 0x00	; 0
 57e:	a3 01       	movw	r20, r6
 580:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__ultoa_invert>
 584:	88 2e       	mov	r8, r24
 586:	86 18       	sub	r8, r6
 588:	45 c0       	rjmp	.+138    	; 0x614 <__stack+0x1b5>
 58a:	85 37       	cpi	r24, 0x75	; 117
 58c:	31 f4       	brne	.+12     	; 0x59a <__stack+0x13b>
 58e:	23 2d       	mov	r18, r3
 590:	2f 7e       	andi	r18, 0xEF	; 239
 592:	b2 2e       	mov	r11, r18
 594:	2a e0       	ldi	r18, 0x0A	; 10
 596:	30 e0       	ldi	r19, 0x00	; 0
 598:	25 c0       	rjmp	.+74     	; 0x5e4 <__stack+0x185>
 59a:	93 2d       	mov	r25, r3
 59c:	99 7f       	andi	r25, 0xF9	; 249
 59e:	b9 2e       	mov	r11, r25
 5a0:	8f 36       	cpi	r24, 0x6F	; 111
 5a2:	c1 f0       	breq	.+48     	; 0x5d4 <__stack+0x175>
 5a4:	18 f4       	brcc	.+6      	; 0x5ac <__stack+0x14d>
 5a6:	88 35       	cpi	r24, 0x58	; 88
 5a8:	79 f0       	breq	.+30     	; 0x5c8 <__stack+0x169>
 5aa:	b5 c0       	rjmp	.+362    	; 0x716 <__stack+0x2b7>
 5ac:	80 37       	cpi	r24, 0x70	; 112
 5ae:	19 f0       	breq	.+6      	; 0x5b6 <__stack+0x157>
 5b0:	88 37       	cpi	r24, 0x78	; 120
 5b2:	21 f0       	breq	.+8      	; 0x5bc <__stack+0x15d>
 5b4:	b0 c0       	rjmp	.+352    	; 0x716 <__stack+0x2b7>
 5b6:	e9 2f       	mov	r30, r25
 5b8:	e0 61       	ori	r30, 0x10	; 16
 5ba:	be 2e       	mov	r11, r30
 5bc:	b4 fe       	sbrs	r11, 4
 5be:	0d c0       	rjmp	.+26     	; 0x5da <__stack+0x17b>
 5c0:	fb 2d       	mov	r31, r11
 5c2:	f4 60       	ori	r31, 0x04	; 4
 5c4:	bf 2e       	mov	r11, r31
 5c6:	09 c0       	rjmp	.+18     	; 0x5da <__stack+0x17b>
 5c8:	34 fe       	sbrs	r3, 4
 5ca:	0a c0       	rjmp	.+20     	; 0x5e0 <__stack+0x181>
 5cc:	29 2f       	mov	r18, r25
 5ce:	26 60       	ori	r18, 0x06	; 6
 5d0:	b2 2e       	mov	r11, r18
 5d2:	06 c0       	rjmp	.+12     	; 0x5e0 <__stack+0x181>
 5d4:	28 e0       	ldi	r18, 0x08	; 8
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	05 c0       	rjmp	.+10     	; 0x5e4 <__stack+0x185>
 5da:	20 e1       	ldi	r18, 0x10	; 16
 5dc:	30 e0       	ldi	r19, 0x00	; 0
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <__stack+0x185>
 5e0:	20 e1       	ldi	r18, 0x10	; 16
 5e2:	32 e0       	ldi	r19, 0x02	; 2
 5e4:	f8 01       	movw	r30, r16
 5e6:	b7 fe       	sbrs	r11, 7
 5e8:	07 c0       	rjmp	.+14     	; 0x5f8 <__stack+0x199>
 5ea:	60 81       	ld	r22, Z
 5ec:	71 81       	ldd	r23, Z+1	; 0x01
 5ee:	82 81       	ldd	r24, Z+2	; 0x02
 5f0:	93 81       	ldd	r25, Z+3	; 0x03
 5f2:	0c 5f       	subi	r16, 0xFC	; 252
 5f4:	1f 4f       	sbci	r17, 0xFF	; 255
 5f6:	06 c0       	rjmp	.+12     	; 0x604 <__stack+0x1a5>
 5f8:	60 81       	ld	r22, Z
 5fa:	71 81       	ldd	r23, Z+1	; 0x01
 5fc:	80 e0       	ldi	r24, 0x00	; 0
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	0e 5f       	subi	r16, 0xFE	; 254
 602:	1f 4f       	sbci	r17, 0xFF	; 255
 604:	a3 01       	movw	r20, r6
 606:	0e 94 e7 03 	call	0x7ce	; 0x7ce <__ultoa_invert>
 60a:	88 2e       	mov	r8, r24
 60c:	86 18       	sub	r8, r6
 60e:	fb 2d       	mov	r31, r11
 610:	ff 77       	andi	r31, 0x7F	; 127
 612:	3f 2e       	mov	r3, r31
 614:	36 fe       	sbrs	r3, 6
 616:	0d c0       	rjmp	.+26     	; 0x632 <__stack+0x1d3>
 618:	23 2d       	mov	r18, r3
 61a:	2e 7f       	andi	r18, 0xFE	; 254
 61c:	a2 2e       	mov	r10, r18
 61e:	89 14       	cp	r8, r9
 620:	58 f4       	brcc	.+22     	; 0x638 <__stack+0x1d9>
 622:	34 fe       	sbrs	r3, 4
 624:	0b c0       	rjmp	.+22     	; 0x63c <__stack+0x1dd>
 626:	32 fc       	sbrc	r3, 2
 628:	09 c0       	rjmp	.+18     	; 0x63c <__stack+0x1dd>
 62a:	83 2d       	mov	r24, r3
 62c:	8e 7e       	andi	r24, 0xEE	; 238
 62e:	a8 2e       	mov	r10, r24
 630:	05 c0       	rjmp	.+10     	; 0x63c <__stack+0x1dd>
 632:	b8 2c       	mov	r11, r8
 634:	a3 2c       	mov	r10, r3
 636:	03 c0       	rjmp	.+6      	; 0x63e <__stack+0x1df>
 638:	b8 2c       	mov	r11, r8
 63a:	01 c0       	rjmp	.+2      	; 0x63e <__stack+0x1df>
 63c:	b9 2c       	mov	r11, r9
 63e:	a4 fe       	sbrs	r10, 4
 640:	0f c0       	rjmp	.+30     	; 0x660 <__stack+0x201>
 642:	fe 01       	movw	r30, r28
 644:	e8 0d       	add	r30, r8
 646:	f1 1d       	adc	r31, r1
 648:	80 81       	ld	r24, Z
 64a:	80 33       	cpi	r24, 0x30	; 48
 64c:	21 f4       	brne	.+8      	; 0x656 <__stack+0x1f7>
 64e:	9a 2d       	mov	r25, r10
 650:	99 7e       	andi	r25, 0xE9	; 233
 652:	a9 2e       	mov	r10, r25
 654:	09 c0       	rjmp	.+18     	; 0x668 <__stack+0x209>
 656:	a2 fe       	sbrs	r10, 2
 658:	06 c0       	rjmp	.+12     	; 0x666 <__stack+0x207>
 65a:	b3 94       	inc	r11
 65c:	b3 94       	inc	r11
 65e:	04 c0       	rjmp	.+8      	; 0x668 <__stack+0x209>
 660:	8a 2d       	mov	r24, r10
 662:	86 78       	andi	r24, 0x86	; 134
 664:	09 f0       	breq	.+2      	; 0x668 <__stack+0x209>
 666:	b3 94       	inc	r11
 668:	a3 fc       	sbrc	r10, 3
 66a:	11 c0       	rjmp	.+34     	; 0x68e <__stack+0x22f>
 66c:	a0 fe       	sbrs	r10, 0
 66e:	06 c0       	rjmp	.+12     	; 0x67c <__stack+0x21d>
 670:	b2 14       	cp	r11, r2
 672:	88 f4       	brcc	.+34     	; 0x696 <__stack+0x237>
 674:	28 0c       	add	r2, r8
 676:	92 2c       	mov	r9, r2
 678:	9b 18       	sub	r9, r11
 67a:	0e c0       	rjmp	.+28     	; 0x698 <__stack+0x239>
 67c:	b2 14       	cp	r11, r2
 67e:	60 f4       	brcc	.+24     	; 0x698 <__stack+0x239>
 680:	b6 01       	movw	r22, r12
 682:	80 e2       	ldi	r24, 0x20	; 32
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 68a:	b3 94       	inc	r11
 68c:	f7 cf       	rjmp	.-18     	; 0x67c <__stack+0x21d>
 68e:	b2 14       	cp	r11, r2
 690:	18 f4       	brcc	.+6      	; 0x698 <__stack+0x239>
 692:	2b 18       	sub	r2, r11
 694:	02 c0       	rjmp	.+4      	; 0x69a <__stack+0x23b>
 696:	98 2c       	mov	r9, r8
 698:	21 2c       	mov	r2, r1
 69a:	a4 fe       	sbrs	r10, 4
 69c:	10 c0       	rjmp	.+32     	; 0x6be <__stack+0x25f>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e3       	ldi	r24, 0x30	; 48
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 6a8:	a2 fe       	sbrs	r10, 2
 6aa:	17 c0       	rjmp	.+46     	; 0x6da <__stack+0x27b>
 6ac:	a1 fc       	sbrc	r10, 1
 6ae:	03 c0       	rjmp	.+6      	; 0x6b6 <__stack+0x257>
 6b0:	88 e7       	ldi	r24, 0x78	; 120
 6b2:	90 e0       	ldi	r25, 0x00	; 0
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <__stack+0x25b>
 6b6:	88 e5       	ldi	r24, 0x58	; 88
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	b6 01       	movw	r22, r12
 6bc:	0c c0       	rjmp	.+24     	; 0x6d6 <__stack+0x277>
 6be:	8a 2d       	mov	r24, r10
 6c0:	86 78       	andi	r24, 0x86	; 134
 6c2:	59 f0       	breq	.+22     	; 0x6da <__stack+0x27b>
 6c4:	a1 fe       	sbrs	r10, 1
 6c6:	02 c0       	rjmp	.+4      	; 0x6cc <__stack+0x26d>
 6c8:	8b e2       	ldi	r24, 0x2B	; 43
 6ca:	01 c0       	rjmp	.+2      	; 0x6ce <__stack+0x26f>
 6cc:	80 e2       	ldi	r24, 0x20	; 32
 6ce:	a7 fc       	sbrc	r10, 7
 6d0:	8d e2       	ldi	r24, 0x2D	; 45
 6d2:	b6 01       	movw	r22, r12
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 6da:	89 14       	cp	r8, r9
 6dc:	38 f4       	brcc	.+14     	; 0x6ec <__stack+0x28d>
 6de:	b6 01       	movw	r22, r12
 6e0:	80 e3       	ldi	r24, 0x30	; 48
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 6e8:	9a 94       	dec	r9
 6ea:	f7 cf       	rjmp	.-18     	; 0x6da <__stack+0x27b>
 6ec:	8a 94       	dec	r8
 6ee:	f3 01       	movw	r30, r6
 6f0:	e8 0d       	add	r30, r8
 6f2:	f1 1d       	adc	r31, r1
 6f4:	80 81       	ld	r24, Z
 6f6:	b6 01       	movw	r22, r12
 6f8:	90 e0       	ldi	r25, 0x00	; 0
 6fa:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 6fe:	81 10       	cpse	r8, r1
 700:	f5 cf       	rjmp	.-22     	; 0x6ec <__stack+0x28d>
 702:	22 20       	and	r2, r2
 704:	09 f4       	brne	.+2      	; 0x708 <__stack+0x2a9>
 706:	42 ce       	rjmp	.-892    	; 0x38c <vfprintf+0x24>
 708:	b6 01       	movw	r22, r12
 70a:	80 e2       	ldi	r24, 0x20	; 32
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 ab 03 	call	0x756	; 0x756 <fputc>
 712:	2a 94       	dec	r2
 714:	f6 cf       	rjmp	.-20     	; 0x702 <__stack+0x2a3>
 716:	f6 01       	movw	r30, r12
 718:	86 81       	ldd	r24, Z+6	; 0x06
 71a:	97 81       	ldd	r25, Z+7	; 0x07
 71c:	02 c0       	rjmp	.+4      	; 0x722 <__stack+0x2c3>
 71e:	8f ef       	ldi	r24, 0xFF	; 255
 720:	9f ef       	ldi	r25, 0xFF	; 255
 722:	2b 96       	adiw	r28, 0x0b	; 11
 724:	e2 e1       	ldi	r30, 0x12	; 18
 726:	0c 94 61 04 	jmp	0x8c2	; 0x8c2 <__epilogue_restores__>

0000072a <strnlen_P>:
 72a:	fc 01       	movw	r30, r24
 72c:	05 90       	lpm	r0, Z+
 72e:	61 50       	subi	r22, 0x01	; 1
 730:	70 40       	sbci	r23, 0x00	; 0
 732:	01 10       	cpse	r0, r1
 734:	d8 f7       	brcc	.-10     	; 0x72c <strnlen_P+0x2>
 736:	80 95       	com	r24
 738:	90 95       	com	r25
 73a:	8e 0f       	add	r24, r30
 73c:	9f 1f       	adc	r25, r31
 73e:	08 95       	ret

00000740 <strnlen>:
 740:	fc 01       	movw	r30, r24
 742:	61 50       	subi	r22, 0x01	; 1
 744:	70 40       	sbci	r23, 0x00	; 0
 746:	01 90       	ld	r0, Z+
 748:	01 10       	cpse	r0, r1
 74a:	d8 f7       	brcc	.-10     	; 0x742 <strnlen+0x2>
 74c:	80 95       	com	r24
 74e:	90 95       	com	r25
 750:	8e 0f       	add	r24, r30
 752:	9f 1f       	adc	r25, r31
 754:	08 95       	ret

00000756 <fputc>:
 756:	0f 93       	push	r16
 758:	1f 93       	push	r17
 75a:	cf 93       	push	r28
 75c:	df 93       	push	r29
 75e:	fb 01       	movw	r30, r22
 760:	23 81       	ldd	r18, Z+3	; 0x03
 762:	21 fd       	sbrc	r18, 1
 764:	03 c0       	rjmp	.+6      	; 0x76c <fputc+0x16>
 766:	8f ef       	ldi	r24, 0xFF	; 255
 768:	9f ef       	ldi	r25, 0xFF	; 255
 76a:	2c c0       	rjmp	.+88     	; 0x7c4 <fputc+0x6e>
 76c:	22 ff       	sbrs	r18, 2
 76e:	16 c0       	rjmp	.+44     	; 0x79c <fputc+0x46>
 770:	46 81       	ldd	r20, Z+6	; 0x06
 772:	57 81       	ldd	r21, Z+7	; 0x07
 774:	24 81       	ldd	r18, Z+4	; 0x04
 776:	35 81       	ldd	r19, Z+5	; 0x05
 778:	42 17       	cp	r20, r18
 77a:	53 07       	cpc	r21, r19
 77c:	44 f4       	brge	.+16     	; 0x78e <fputc+0x38>
 77e:	a0 81       	ld	r26, Z
 780:	b1 81       	ldd	r27, Z+1	; 0x01
 782:	9d 01       	movw	r18, r26
 784:	2f 5f       	subi	r18, 0xFF	; 255
 786:	3f 4f       	sbci	r19, 0xFF	; 255
 788:	31 83       	std	Z+1, r19	; 0x01
 78a:	20 83       	st	Z, r18
 78c:	8c 93       	st	X, r24
 78e:	26 81       	ldd	r18, Z+6	; 0x06
 790:	37 81       	ldd	r19, Z+7	; 0x07
 792:	2f 5f       	subi	r18, 0xFF	; 255
 794:	3f 4f       	sbci	r19, 0xFF	; 255
 796:	37 83       	std	Z+7, r19	; 0x07
 798:	26 83       	std	Z+6, r18	; 0x06
 79a:	14 c0       	rjmp	.+40     	; 0x7c4 <fputc+0x6e>
 79c:	8b 01       	movw	r16, r22
 79e:	ec 01       	movw	r28, r24
 7a0:	fb 01       	movw	r30, r22
 7a2:	00 84       	ldd	r0, Z+8	; 0x08
 7a4:	f1 85       	ldd	r31, Z+9	; 0x09
 7a6:	e0 2d       	mov	r30, r0
 7a8:	09 95       	icall
 7aa:	89 2b       	or	r24, r25
 7ac:	e1 f6       	brne	.-72     	; 0x766 <fputc+0x10>
 7ae:	d8 01       	movw	r26, r16
 7b0:	16 96       	adiw	r26, 0x06	; 6
 7b2:	8d 91       	ld	r24, X+
 7b4:	9c 91       	ld	r25, X
 7b6:	17 97       	sbiw	r26, 0x07	; 7
 7b8:	01 96       	adiw	r24, 0x01	; 1
 7ba:	17 96       	adiw	r26, 0x07	; 7
 7bc:	9c 93       	st	X, r25
 7be:	8e 93       	st	-X, r24
 7c0:	16 97       	sbiw	r26, 0x06	; 6
 7c2:	ce 01       	movw	r24, r28
 7c4:	df 91       	pop	r29
 7c6:	cf 91       	pop	r28
 7c8:	1f 91       	pop	r17
 7ca:	0f 91       	pop	r16
 7cc:	08 95       	ret

000007ce <__ultoa_invert>:
 7ce:	fa 01       	movw	r30, r20
 7d0:	aa 27       	eor	r26, r26
 7d2:	28 30       	cpi	r18, 0x08	; 8
 7d4:	51 f1       	breq	.+84     	; 0x82a <__ultoa_invert+0x5c>
 7d6:	20 31       	cpi	r18, 0x10	; 16
 7d8:	81 f1       	breq	.+96     	; 0x83a <__ultoa_invert+0x6c>
 7da:	e8 94       	clt
 7dc:	6f 93       	push	r22
 7de:	6e 7f       	andi	r22, 0xFE	; 254
 7e0:	6e 5f       	subi	r22, 0xFE	; 254
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255
 7e4:	8f 4f       	sbci	r24, 0xFF	; 255
 7e6:	9f 4f       	sbci	r25, 0xFF	; 255
 7e8:	af 4f       	sbci	r26, 0xFF	; 255
 7ea:	b1 e0       	ldi	r27, 0x01	; 1
 7ec:	3e d0       	rcall	.+124    	; 0x86a <__ultoa_invert+0x9c>
 7ee:	b4 e0       	ldi	r27, 0x04	; 4
 7f0:	3c d0       	rcall	.+120    	; 0x86a <__ultoa_invert+0x9c>
 7f2:	67 0f       	add	r22, r23
 7f4:	78 1f       	adc	r23, r24
 7f6:	89 1f       	adc	r24, r25
 7f8:	9a 1f       	adc	r25, r26
 7fa:	a1 1d       	adc	r26, r1
 7fc:	68 0f       	add	r22, r24
 7fe:	79 1f       	adc	r23, r25
 800:	8a 1f       	adc	r24, r26
 802:	91 1d       	adc	r25, r1
 804:	a1 1d       	adc	r26, r1
 806:	6a 0f       	add	r22, r26
 808:	71 1d       	adc	r23, r1
 80a:	81 1d       	adc	r24, r1
 80c:	91 1d       	adc	r25, r1
 80e:	a1 1d       	adc	r26, r1
 810:	20 d0       	rcall	.+64     	; 0x852 <__ultoa_invert+0x84>
 812:	09 f4       	brne	.+2      	; 0x816 <__ultoa_invert+0x48>
 814:	68 94       	set
 816:	3f 91       	pop	r19
 818:	2a e0       	ldi	r18, 0x0A	; 10
 81a:	26 9f       	mul	r18, r22
 81c:	11 24       	eor	r1, r1
 81e:	30 19       	sub	r19, r0
 820:	30 5d       	subi	r19, 0xD0	; 208
 822:	31 93       	st	Z+, r19
 824:	de f6       	brtc	.-74     	; 0x7dc <__ultoa_invert+0xe>
 826:	cf 01       	movw	r24, r30
 828:	08 95       	ret
 82a:	46 2f       	mov	r20, r22
 82c:	47 70       	andi	r20, 0x07	; 7
 82e:	40 5d       	subi	r20, 0xD0	; 208
 830:	41 93       	st	Z+, r20
 832:	b3 e0       	ldi	r27, 0x03	; 3
 834:	0f d0       	rcall	.+30     	; 0x854 <__ultoa_invert+0x86>
 836:	c9 f7       	brne	.-14     	; 0x82a <__ultoa_invert+0x5c>
 838:	f6 cf       	rjmp	.-20     	; 0x826 <__ultoa_invert+0x58>
 83a:	46 2f       	mov	r20, r22
 83c:	4f 70       	andi	r20, 0x0F	; 15
 83e:	40 5d       	subi	r20, 0xD0	; 208
 840:	4a 33       	cpi	r20, 0x3A	; 58
 842:	18 f0       	brcs	.+6      	; 0x84a <__ultoa_invert+0x7c>
 844:	49 5d       	subi	r20, 0xD9	; 217
 846:	31 fd       	sbrc	r19, 1
 848:	40 52       	subi	r20, 0x20	; 32
 84a:	41 93       	st	Z+, r20
 84c:	02 d0       	rcall	.+4      	; 0x852 <__ultoa_invert+0x84>
 84e:	a9 f7       	brne	.-22     	; 0x83a <__ultoa_invert+0x6c>
 850:	ea cf       	rjmp	.-44     	; 0x826 <__ultoa_invert+0x58>
 852:	b4 e0       	ldi	r27, 0x04	; 4
 854:	a6 95       	lsr	r26
 856:	97 95       	ror	r25
 858:	87 95       	ror	r24
 85a:	77 95       	ror	r23
 85c:	67 95       	ror	r22
 85e:	ba 95       	dec	r27
 860:	c9 f7       	brne	.-14     	; 0x854 <__ultoa_invert+0x86>
 862:	00 97       	sbiw	r24, 0x00	; 0
 864:	61 05       	cpc	r22, r1
 866:	71 05       	cpc	r23, r1
 868:	08 95       	ret
 86a:	9b 01       	movw	r18, r22
 86c:	ac 01       	movw	r20, r24
 86e:	0a 2e       	mov	r0, r26
 870:	06 94       	lsr	r0
 872:	57 95       	ror	r21
 874:	47 95       	ror	r20
 876:	37 95       	ror	r19
 878:	27 95       	ror	r18
 87a:	ba 95       	dec	r27
 87c:	c9 f7       	brne	.-14     	; 0x870 <__ultoa_invert+0xa2>
 87e:	62 0f       	add	r22, r18
 880:	73 1f       	adc	r23, r19
 882:	84 1f       	adc	r24, r20
 884:	95 1f       	adc	r25, r21
 886:	a0 1d       	adc	r26, r0
 888:	08 95       	ret

0000088a <__prologue_saves__>:
 88a:	2f 92       	push	r2
 88c:	3f 92       	push	r3
 88e:	4f 92       	push	r4
 890:	5f 92       	push	r5
 892:	6f 92       	push	r6
 894:	7f 92       	push	r7
 896:	8f 92       	push	r8
 898:	9f 92       	push	r9
 89a:	af 92       	push	r10
 89c:	bf 92       	push	r11
 89e:	cf 92       	push	r12
 8a0:	df 92       	push	r13
 8a2:	ef 92       	push	r14
 8a4:	ff 92       	push	r15
 8a6:	0f 93       	push	r16
 8a8:	1f 93       	push	r17
 8aa:	cf 93       	push	r28
 8ac:	df 93       	push	r29
 8ae:	cd b7       	in	r28, 0x3d	; 61
 8b0:	de b7       	in	r29, 0x3e	; 62
 8b2:	ca 1b       	sub	r28, r26
 8b4:	db 0b       	sbc	r29, r27
 8b6:	0f b6       	in	r0, 0x3f	; 63
 8b8:	f8 94       	cli
 8ba:	de bf       	out	0x3e, r29	; 62
 8bc:	0f be       	out	0x3f, r0	; 63
 8be:	cd bf       	out	0x3d, r28	; 61
 8c0:	09 94       	ijmp

000008c2 <__epilogue_restores__>:
 8c2:	2a 88       	ldd	r2, Y+18	; 0x12
 8c4:	39 88       	ldd	r3, Y+17	; 0x11
 8c6:	48 88       	ldd	r4, Y+16	; 0x10
 8c8:	5f 84       	ldd	r5, Y+15	; 0x0f
 8ca:	6e 84       	ldd	r6, Y+14	; 0x0e
 8cc:	7d 84       	ldd	r7, Y+13	; 0x0d
 8ce:	8c 84       	ldd	r8, Y+12	; 0x0c
 8d0:	9b 84       	ldd	r9, Y+11	; 0x0b
 8d2:	aa 84       	ldd	r10, Y+10	; 0x0a
 8d4:	b9 84       	ldd	r11, Y+9	; 0x09
 8d6:	c8 84       	ldd	r12, Y+8	; 0x08
 8d8:	df 80       	ldd	r13, Y+7	; 0x07
 8da:	ee 80       	ldd	r14, Y+6	; 0x06
 8dc:	fd 80       	ldd	r15, Y+5	; 0x05
 8de:	0c 81       	ldd	r16, Y+4	; 0x04
 8e0:	1b 81       	ldd	r17, Y+3	; 0x03
 8e2:	aa 81       	ldd	r26, Y+2	; 0x02
 8e4:	b9 81       	ldd	r27, Y+1	; 0x01
 8e6:	ce 0f       	add	r28, r30
 8e8:	d1 1d       	adc	r29, r1
 8ea:	0f b6       	in	r0, 0x3f	; 63
 8ec:	f8 94       	cli
 8ee:	de bf       	out	0x3e, r29	; 62
 8f0:	0f be       	out	0x3f, r0	; 63
 8f2:	cd bf       	out	0x3d, r28	; 61
 8f4:	ed 01       	movw	r28, r26
 8f6:	08 95       	ret

000008f8 <_exit>:
 8f8:	f8 94       	cli

000008fa <__stop_program>:
 8fa:	ff cf       	rjmp	.-2      	; 0x8fa <__stop_program>
